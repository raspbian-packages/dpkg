.\" Automatically generated by Pod::Man 4.11 (Pod::Simple 3.35)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "deb-old 5"
.TH deb-old 5 "2020-08-02" "1.20.5" "dpkg suite"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NOME"
.IX Header "NOME"
deb-old \- formato vecchio stile dei pacchetti binari Debian
.SH "SINTASSI"
.IX Header "SINTASSI"
\&\fInomefile\fR\fB.deb\fR
.SH "DESCRIZIONE"
.IX Header "DESCRIZIONE"
Il formato \fB.deb\fR \(`e il formato del file dei pacchetti binari Debian. Questa
pagina di manuale descrive il \fBvecchio\fR formato, usato prima di Debian
0.93. Vedere \fBdeb\fR(5) per i dettagli sul nuovo formato.
.SH "FORMATO"
.IX Header "FORMATO"
Il file \(`e composto da due righe di testo \s-1ASCII\s0 con informazioni sul formato,
seguite da due file ustar compressi con gzip e concatenati.
.PP
La prima riga \(`e il numero di versione del formato espresso con 8 cifre ed \(`e
\&\fB0.939000\fR per tutti gli archivi nel formato vecchio.
.PP
La seconda riga \(`e una stringa decimale (senza zeri iniziali) che fornisce la
lunghezza del primo file tar compresso con gzip.
.PP
Ciascuna di queste righe termina con un singolo carattere di ritorno a capo.
.PP
Il primo file tar contiene le informazioni di controllo, in forma di una
serie di file ordinari. Il file \fBcontrol\fR deve essere presente dato che
contiene le informazioni principali di controllo.
.PP
In some very old archives, the files in the control tarfile may optionally
be in a \fB\s-1DEBIAN\s0\fR subdirectory. In that case, the \fB\s-1DEBIAN\s0\fR subdirectory
will be in the control tarfile too, and the control tarfile will have only
files in that directory. Optionally the control tarfile may contain an entry
for \(oq\fB.\fR\(cq, that is, the current directory.
.PP
Il secondo file tar compresso con gpiz \(`e l'archivio del file system che
contiene i nomi di percorso relativi alla directory root del sistema su cui
devono essere installati. I nomi di percorso non terminano con sbarre.
.SH "VEDERE ANCHE"
.IX Header "VEDERE ANCHE"
\&\fBdeb\fR(5), \fBdpkg-deb\fR(1), \fBdeb-control\fR(5).
