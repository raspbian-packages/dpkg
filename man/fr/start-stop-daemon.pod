
        *****************************************************
        *           GENERATED FILE, DO NOT EDIT             *
        * THIS IS NO SOURCE FILE, BUT RESULT OF COMPILATION *
        *****************************************************

This file was generated by po4a(7). Do not store it (in VCS, for example),
but store the PO file used as source file by po4a-translate.

In fact, consider this as a binary, and the PO file as a regular .c file:
If the PO get lost, keeping this translation up-to-date will be harder.

=encoding UTF-8

=head1 NOM

start-stop-daemon - Lance ou arrête des démons système

=head1 SYNOPSIS

B<start-stop-daemon> [I<option>...] I<commande>

=head1 DESCRIPTION

On se sert de B<start-stop-daemon> pour contrôler la création ou l'arrêt de processus système. En utilisant une des options de correspondance, B<start-stop-daemon> peut être configuré pour trouver les exemplaires présents d'un processus en fonctionnement.

S<B<Note> :> à moins d'utiliser B<--pid> ou B<--pidfile>, le programme B<start-stop-daemon> se comporte comme B<killall>(1). B<start-stop-daemon> recherche dans le tableau des processus tout processus qui correspond au nom, pid parent, uid et/ou gid du processus (si indiqué). Toute correspondance empêchera B<--start> de démarrer le démon. Tous les processus qui correspondent recevront le signal TERM (ou le signal indiqué par B<--signal> ou B<--retry>) si B<--stop> est indiqué. Pour les démons avec des processus enfants qui doivent survivre à un B<--stop>, il est nécessaire d'indiquer un fichier pid S<(« pidfile »).>

=head1 COMMANDES

=over 

=item B<-S>, B<--start> [B<-->] I<paramètres>

Vérifier l'existence d'un processus particulier. Quand il existe un tel processus, B<start-stop-daemon> ne fait rien et se termine avec un code d'erreur égal à B<1> (B<0> si B<--oknodo> est précisé). Quand un tel processus n'existe pas, un exemplaire de l'exécutable est lancé, en utilisant le paramètre de B<--exec> ou celui de B<--startas> si cette option est précisée. Tout argument donné après B<--> sur la ligne de commande est passé tel quel au programme qui doit être lancé.

=item B<-K>, B<--stop>

Vérifier aussi l'existence d'un processus particulier. Quand un tel processus existe, B<start-stop-daemon> lui envoie le signal précisé avec B<--signal> et se termine avec un code d'erreur égal à B<0>. Quand un tel processus n'existe pas, B<start-stop-daemon> se termine avec un code d'erreur égal à B<1> (B<0> si B<--oknodo> est précisé). Si B<--retry> est indiquée, B<start-stop-daemon> recherche si le processus ou les processus se sont bien terminés.

=item B<-T>, B<--status>

Contrôle l'existence du processus indiqué et sort avec un code de sortie défini par les actions des scripts d'initialisation de la LSB S<(« LSB> Init Script S<Actions »> – depuis la version 1.16.1).

=item B<-H>, B<--help>

Affiche un message d'aide, puis quitte.

=item B<-V>, B<--version>

Affiche la version du programme, puis quitte.

=back

=head1 OPTIONS

=head2 Options de correspondance

=over 

=item [B<--pid>] I<pid>

Vérifie l'existence d'un processus avec le I<pid> spécifié (depuis la version 1.17.6). Le I<pid> doit avoir un numéro supérieur à 0.

=item [B<--ppid>] I<pid parent>

Vérifie l'existence d'un processus avec le pid parent I<pid-parent> spécifié (depuis la version 1.17.7). Le I<pid-parent> doit avoir un numéro supérieur S<à 0.>

=item B<-p>, B<--pidfile> I<fichier-pid>

Cherche les processus dont les identifiants sont précisés dans I<fichier-pid>.

S<B<Note> :> l'utilisation de l'option de correspondance seule peut provoquer des actions sur des processus non prévus, si l'ancien processus s'est terminé sans avoir retiré le I<fichier-pid>.

S<B<Attention> :> L'utilisation de cette option de correspondance avec un fichier pid accessible à tous en écriture ou seule avec un démon qui écrit le fichier pid comme utilisateur non privilégié (pas root) sera refusée avec une erreur (depuis la version 1.19.3), car c'est un risque de sécurité, parce que, si le démon se trouve compromis, le contenu du fichier pid ne peut plus être sûr, et ainsi, un exécutant privilégié (comme un script init exécuté entant que root) pourrait en fin de compte agir sur n'importe quel processus du système. L'utilisation de I</dev/null> est exclue de ces vérifications.

=item B<-x>, B<--exec> I<exécutable>

Contrôle l'existence de processus qui soient des exemplaires de cet I<exécutable>. Le paramètre I<exécutable> doit être un chemin absolu.

S<B<Note> :> cela peut ne pas fonctionner avec des scripts interprétés, car l'exécutable sera alors l'interpréteur. Des processus en exécution au sein d'un environnement fermé d'exécution S<(« chroot »)> seront également trouvés et il peut donc être nécessaire d'ajouter d'autres restrictions de correspondance.

=item B<-n>, B<--name> I<nom-de-processus>

Contrôle l'existence de processus avec I<nom-de-processus> comme nom. Le I<nom-de-processus> est en général le nom du fichier du processus, mais peut avoir été modifié par le processus lui-même.

S<B<Note> :> sur la plupart des systèmes, cette information est récupérée par le nom de communication du noyau, ce qui induit une limite de longueur assez courte (la portabilité impose de ne pas supposer plus de 15 caractères).

=item B<-u>, B<--user> I<identifiant>|I<uid>

Contrôle l'existence de processus dont le propriétaire est I<identifiant> ou I<uid>.

S<B<Note> :> si cette option est utilisée seule, tous les processus de cet utilisateur seront concernés par l'action.

=back

=head2 Options génériques

=over 

=item B<-g>, B<--group> I<groupe>|I<gid>

Modifie le I<groupe> ou le I<gid> au début du processus.

=item B<-s>, B<--signal> I<signal>

L'action B<--stop> définit le signal à envoyer au processus qui doit être arrêté (par S<défaut :> TERM).

=item B<-R>, B<--retry> I<durée>|I<action-prévue>

Avec l'action B<--stop>, B<start-stop-daemon> doit vérifier que les processus se sont terminés. Il le fait pour tous les processus correspondants qui tournent, jusqu'à ce qu'il n'y en ait plus. Quand le processus ne se termine pas, il prend d'autres mesures déterminées par l'I<action-prévue>.

Si I<durée> est indiquée plutôt que I<action-prévue>, l'action-prévue I<signal>B</>I<durée>B</KILL/>I<durée> est utilisée, où I<signal> est le signal indiqué par B<--signal>.

I<action-prévue> est une liste d'au moins deux items séparés par des barres obliques (B</>) ; chaque item peut être de la forme B<->I<numéro-signal> ou de la forme [B<->]I<nom-signal>, ce qui demande d'envoyer ce signal ; ou bien de la forme I<durée,> ce qui demande d'attendre tant de secondes avant de terminer les processus, ou bien de la forme B<forever>, ce qui demande de répéter constamment le reste de action-prévue, si nécessaire.

Quand la fin de l'action-prévue est atteinte et que B<forever> n'a pas été précisé, B<start-stop-daemon> se termine avec un code d'erreur égal à B<2>. Quand une action-prévue est indiquée, tout signal donné par B<--signal> est ignoré.

=item I<-a>, B<--startas> I<nom-de-chemin>

Avec l'action B<--start>, lance le processus spécifié par I<nom-de-chemin>. Si rien n'est précisé, c'est par défaut l'argument donné à B<--exec>.

=item B<-t>, B<--test>

Affiche les actions qui seraient entreprises et détermine la bonne valeur de retour, mais ne fait rien.

=item B<-o>, B<--oknodo>

Retourne un code de sortie égal à B<0> au lieu de B<1> si rien n'est ou ne sera fait.

=item B<-q>, B<--quiet>

N'affiche pas de messages d'information ; affiche seulement les messages d'erreur.

=item B<-c>, B<--chuid> I<identifiant>|I<uid>[B<:>I<groupe>|I<gid>]

Change pour cet utilisateur ou S<« uid »> avant de lancer le processus. On peut aussi préciser un groupe en ajoutant un B<:>, puis le groupe ou un S<« gid »> de la même façon qu'avec la commande B<chown>(1) (I<utilisateur>B<:>I<groupe>). Lorsqu'un utilisateur est indiqué mais pas de groupe alors le groupe primaire de celui-ci est utilisé. Quand on utilise cette option, on doit veiller à ce que les groupes primaires ainsi que les groupes secondaires existent bien, même si l'option B<--group> n'est pas spécifiée. L'option B<--group> sert seulement pour les groupes dont l'utilisateur n'est pas membre (c'est comme rendre membre d'un groupe-pour-processus des utilisateurs génériques comme B<nobody>).

=item B<-r>, B<--chroot> I<root>

Change de répertoire racine pour B<root> avant de lancer le processus. Remarquez que le S<« pidfile »> est aussi écrit après le changement de racine.

=item B<-d>, B<--chdir> I<chemin>

Change de répertoire pour I<chemin> avant de commencer le processus. Cela est fait après le changement de répertoire racine si l'option B<-r>|B<--chroot> est demandée. Si rien n'est demandé, B<start-stop-daemon> changera de répertoire pour le répertoire racine avant de commencer le processus.

=item B<-b>, B<--background>

Utilisé généralement pour les programmes qui ne S<« se> S<détachent »> pas d'eux-mêmes. Cette option oblige B<start-stop-daemon> à se dupliquer (fork) avant de lancer le processus, et l'oblige à passer en arrière-plan.

S<B<AVERTISSEMENT :> start-stop-daemon> ne peut pas vérifier le code de sortie quand, pour B<une raison ou une autre>, le processus échoue. C'est un expédient dont on se servira seulement pour des programmes dont la duplication n'a pas de sens ou bien des programmes dont le code n'est pas adaptable pour leur ajouter cette fonctionnalité.

=item B<--notify-await>

Attend que le processus en arrière-plan envoie une notification de disponibilité avant de considérer que le service est démarré (depuis la version 1.19.3). Cela met en œuvre des éléments du protocole de disponibilité de systemd, comme spécifié dans la page de manuel de B<sd_notify>(3). Les variables suivantes sont prises en S<charge :>

=over 

=item B<READY=1>

Le programme est prêt à offrir son service, il est possible de quitter sans risque.

=item B<EXTEND_TIMEOUT_USEC=>I<nombre>

Le programme demande l'extension de la durée de I<nombre> microsecondes. Cela fixera la durée en cours à la valeur spécifiée.

=item B<ERRNO=> I<nombre>

Le programme s'est terminé avec une erreur. Fait la même chose et affiche une chaîne conviviale pour la valeur de B<errno>.

=back

=item B<--notify-timeout> I<durée>

Définit une durée pour l'option B<--notify-await> (depuis la version 1.19.3). Quand la durée est atteinte, B<start-stop-daemon> s'arrête avec un code d'erreur et aucune notification de disponibilité n'est attendue. La durée par défaut est de B<60> secondes.

=item B<-C>, B<--no-close>

Ne fermer aucun descripteur de fichiers en forçant le démon à s'exécuter en arrière-plan (depuis la version 1.16.5). Utilisé à des fins de débogage afin de voir ce qu'affiche le processus ou pour rediriger les descripteurs de fichiers pour journaliser l'affichage du processus. N'est pertinent que lors de l'utilisation de B<--background>.

=item B<-O>, B<--output> I<nom-de-chemin>

Rediriger B<stdout> et B<stderr> vers I<nom-de-chemin> en forçant le démon à s'exécuter en arrière-plan (depuis la version 1.20.6). N'est pertinent que lors de l'utilisation de B<--background>.

=item B<-N>, B<--nicelevel> I<int>

Cela modifie la priorité du processus avant qu'il ne soit lancé.

=item B<-P>, B<--procsched> I<politique>B<:>I<priorité>

Modifie la politique du programmateur de processus S<(« process> scheduler S<policy »)> et la priorité du processus avant de le démarrer (depuis la version 1.15.0). La priorité peut être indiquée de manière facultative avec B<:> suivi de la valeur souhaitée. La I<priorité> par défaut est 0. Les valeurs de politiques actuellement gérées sont B<other>, B<fifo> et B<rr>.

Cette option peut ne rien faire sur certains système où la programmation des processus de POSIX n'est pas prise en charge.

=item B<-I>, B<--iosched> I<classe>B<:>I<priorité>

Modifie la classe du programmateur d'entrée/sortie S<(« IO> S<scheduler »)> et la priorité du processus avant de le démarrer (depuis la version 1.15.0). La priorité peut être indiquée de manière facultative avec B<:> suivi de la valeur souhaitée. La I<priorité> par défaut est 4, sauf si I<classe> est B<idle>, auquel cas I<priorité> sera toujours égale à 7. Les valeurs de I<classe> actuellement gérées sont B<idle>, B<best-effort> et B<real-time>.

Cette option peut ne rien faire sur certains système où la programmation d'entrée/sortie de Linux n'est pas prise en charge.

=item B<-k>, B<--umask> I<masque>

Cela modifie le masque utilisateur du processus avant qu'il ne soit lancé (depuis la version 1.13.22).

=item B<-m>, B<--make-pidfile>

Utilisé lors du lancement d'un programme qui ne crée pas son propre fichier identificateur S<« pid ».> Cette option indique à B<start-stop-daemon> de créer le fichier référencé par B<--pidfile> et placer le S<« pid »> dans ce fichier juste avant d'exécuter le processus. Il faut remarquer que ce fichier ne sera supprimé quand le programme s'arrête que si B<--remove-pidfile> est utilisé.

S<B<NOTE :>> il se peut que cette caractéristique ne marche pas dans tous les cas. Notamment quand le programme qui est exécuté se duplique. À cause de cela, cette option n'est habituellement utile que combinée avec l'option B<--background>.

=item B<--remove-pidfile>

Utilisé lors de l'arrêt d'un programme qui ne supprime pas lui-même son fichier identificateur S<« pid »> (depuis la version 1.17.19). Cette option indique à B<start-stop-daemon> de supprimer le fichier référencé par B<--pid-file> après l'arrêt du processus.

=item B<-v>, B<--verbose>

Affiche des messages prolixes en renseignements.

=back

=head1 CODE DE SORTIE

=over 

=item B<0>

L'action demandée a été effectuée. Si B<--oknodo> était indiqué, il est également possible que rien ne se soit passé. Cela peut se produire si B<--start> était indiqué et qu'un processus correspondant était déjà en train de s'exécuter ou si B<--stop> était indiqué et qu'aucun processus ne correspondait.

=item B<1>

Si B<--oknodo> n'était pas indiqué et que rien ne s'est passé.

=item B<2>

Si B<--stop> et B<--retry> étaient indiqués mais que la fin de la planification a été atteinte et que les processus étaient toujours en cours d'exécution.

=item B<3>

Toute autre erreur.

=back

Lorsque la commande B<--status> est utilisée, les codes d'état suivants sont S<renvoyés :>

=over 

=item B<0>

Le programme est en cours d'exécution.

=item B<1>

Le programme n'est pas en cours d'exécution et le fichier PID existe.

=item B<3>

Le programme n'est pas en cours d'exécution.

=item B<4>

Impossible de déterminer l'état du programme.

=back

=head1 EXEMPLE

Démarre le démon B<food>, à moins qu'il soit déjà en cours d'exécution (un processus nommé B<food>, tournant sous le nom d'utilisateur B<food>, avec un pid dans S<food.pid) :>

=over 

 start-stop-daemon --start --oknodo --user food --name food \
   --pidfile %RUNSTATEDIR%/food.pid --startas /usr/sbin/food \
   --chuid food -- --daemon

=back

Envoie le signal B<SIGTERM> à B<food> et attend durant 5 secondes son S<arrêt :>

=over 

 start-stop-daemon --stop --oknodo --user food --name food \
   --pidfile %RUNSTATEDIR%/food.pid --retry 5

=back

Démonstration d'un ordonnanceur personnalisé pour l'arrêt de S<B<food> :>

=over 

 start-stop-daemon --stop --oknodo --user food --name food \
   --pidfile %RUNSTATEDIR%/food.pid --retry=TERM/30/KILL/5

=back


=head1 TRADUCTION

Ariel VARDI <ariel.vardi@freesbee.fr>, 2002.
Philippe Batailler, 2006.
Nicolas François, 2006.
Veuillez signaler toute erreur à <debian-l10n-french@lists.debian.org>.
