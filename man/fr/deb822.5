.\" Automatically generated by Pod::Man 4.11 (Pod::Simple 3.35)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "deb822 5"
.TH deb822 5 "2020-08-02" "1.20.5" "dpkg suite"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NOM"
.IX Header "NOM"
deb822 \- Format des donn\('ees de contr\(^ole \s-1RFC822\s0 Debian
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
Le syst\(`eme de gestion de paquets manipule des donn\('ees repr\('esent\('ees dans un
format commun, connues comme \fIdonn\('ees de contr\(^ole\fR, stock\('ees dans les
\&\fIfichiers de contr\(^ole\fR. Les fichiers de contr\(^ole sont utilis\('es pour les
paquets source, les paquets binaires et les fichiers \fB.changes\fR qui
contr\(^olent l'installation des fichiers t\('el\('evers\('es (les bases de donn\('ees
internes de \fBdpkg\fR sont dans un format similaire).
.SH "SYNTAXE"
.IX Header "SYNTAXE"
Un fichier de contr\(^ole consiste en un ou plusieurs paragraphes de champs
(les paragraphes sont aussi parfois appel\('es strophes, \(Fo stanzas \(Fc). Les
paragraphes sont s\('epar\('es par des lignes vides. Les analyseurs peuvent
accepter des lignes qui ne contiennent que des caract\(`eres U+0020 \fB\s-1ESPACE\s0\fR
et U+0009 \fB\s-1TABULATION\s0\fR comme s\('eparateurs de paragraphes, mais les fichiers
de contr\(^ole utiliseront des lignes vides. Certains fichiers de contr\(^ole
acceptent seulement un paragraphe unique, d'autres plusieurs, dans ce cas,
chaque paragraphe fait r\('ef\('erence habituellement \(`a un paquet diff\('erent. (Par
exemple, dans les paquets source, le premier paragraphe fait r\('ef\('erence au
paquet source, et les paragraphes suivants font r\('ef\('erences aux paquets
binaires cr\('e\('es \(`a partir du source.) L'ordre des paragraphes dans les
fichiers de contr\(^oles est important.
.PP
Chaque paragraphe consiste en une s\('erie de champs de donn\('ees. Chaque champ
est constitu\('e d'un nom de champ suivi de deux-points (U+003A \(Fo \fB:\fR \(Fc), puis
les donn\('ees ou valeur associ\('ees \(`a ce champ. Le nom du champ est compos\('e de
caract\(`eres US-ASCII \(`a l'exception des caract\(`eres de contr\(^ole, de l'espace et
des deux-points (c'est\-\(`a dire des caract\(`eres entre U+0021 \(Fo \fB!\fR \(Fc et U+0039
\(Fo \fB9\fR \(Fc, et entre U+003B \(Fo \fB;\fR \(Fc et U+007E \(Fo \fB~\fR \(Fc compris). Les noms de
champ ne doivent pas commencer par le caract\(`ere de commentaire \(Fo (U+0023
\&\fB#\fR \(Fc, ni par le caract\(`ere trait d'union (U+002D \(Fo \fB\-\fR \(Fc.
.PP
Les champs se terminent \(`a la fin de la ligne ou \(`a la fin de la derni\(`ere
ligne de continuation (voir ci-dessous). Une espace horizontale (U+0020
\&\fB\s-1ESPACE\s0\fR et U+0009 \fB\s-1TABULATION\s0\fR) peut appara\(^itre imm\('ediatement avant ou
apr\(`es la valeur et est ignor\('ee dans ce cas ; par convention, il y une espace
unique apr\(`es les deux-points. Par exemple, un champ pourrait \(^etre :
.Sp
.Vb 1
\& Package: dpkg
.Ve
.PP
le nom du champ est \fBPackage\fR et la valeur du champ \fBdpkg\fR.
.PP
Des valeurs de champ vides ne sont permises que dans les fichiers de
contr\(^ole des paquets source (\fIdebian/control\fR). Ces champs sont ignor\('es.
.PP
Un paragraphe ne doit pas contenir plus d'une instance d'un nom de champ
particulier.
.PP
Il y a trois types de champ :
.RS 4
.IP "\fBsimple\fR" 4
.IX Item "simple"
Ce champ, y compris sa valeur, doit \(^etre une ligne unique. La coupure du
champ est interdite. Il s'agit du type de champ par d\('efaut lorsque la
d\('efinition du champ ne pr\('ecise pas un type diff\('erent.
.IP "\fBcoup\('e\fR" 4
.IX Item "coup\('e"
La valeur d'un champ coup\('e (\(Fo folded \(Fc) est une ligne logique qui peut
s'\('etendre sur plusieurs lignes. Les lignes qui suivent la premi\(`ere sont
appel\('ees ligne de continuation et doivent commencer par un caract\(`ere U+0020
\&\fB\s-1ESPACE\s0\fR ou U+0009 \fB\s-1TABULATION\s0\fR. Une espace, y compris les caract\(`eres saut
de ligne, n'est pas importante dans les valeurs de champ des champs coup\('es.
.Sp
La m\('ethode de coupure est similaire \(`a \s-1RFC5322,\s0 permettant des fichiers de
contr\(^ole, qui contiennent seulement un paragraphe et pas des champs \(`a
plusieurs lignes, d'\(^etre lus par les analyseurs \('ecrits pour \s-1RFC5322.\s0
.IP "\fB\(`a lignes multiples\fR" 4
.IX Item "\(`a lignes multiples"
La valeur d'un champ \(`a lignes multiples peut comprendre de multiples lignes
de continuation. La premi\(`ere ligne de la valeur, la partie sur la m\(^eme ligne
que le nom du champ, a souvent une signification particuli\(`ere ou peut devoir
\(^etre vide. Les autres lignes sont ajout\('ees avec la m\(^eme syntaxe que les
lignes de continuation des champs coup\('es. Une espace, y compris les
caract\(`eres saut de ligne, est importante dans les valeurs des champs \(`a
lignes multiples.
.RE
.RS 4
.Sp
Aucune espace ne doit appara\(^itre dans les noms (de paquet, d'architecture,
de fichier ou n'importe quoi d'autre) ou les num\('eros de version, ou entre
les caract\(`eres des relations des versions multi\-caract\(`eres.
.Sp
La pr\('esence et le but d'un champ, ainsi que la syntaxe de sa valeur peuvent
diff\('erer selon les types de fichiers de contr\(^ole.
.Sp
Les noms de champ ne sont pas sensibles \(`a la casse, mais il est habituel de
mettre en capitale l'initiale des noms de champ utilisant une casse mixte
comme indiqu\('e plus bas. Les valeurs de champ sont sensibles \(`a la casse \(`a
moins que la description du champ ne dise le contraire.
.Sp
Les s\('eparateurs de paragraphes (lignes vides) et les lignes constitu\('ees
uniquement de U+0020 \fB\s-1ESPACE\s0\fR et U+0009 \fB\s-1TABULATION\s0\fR, ne sont pas permis
dans les valeurs de champ ou entre les champs. Les lignes vides dans les
valeurs de champ sont habituellement prot\('eg\('ees par une U+0020 \fB\s-1ESPACE\s0\fR
suivie par un point (U+002E \(Fo \fB.\fR \(Fc).
.Sp
Les lignes d\('ebutant par un U+0023 \(Fo \fB#\fR \(Fc, sans \(^etre pr\('ec\('ed\('ee d'une espace
sont des lignes de commentaires qui ne sont permises que dans les fichiers
de contr\(^ole de paquet source et dans les fichiers \fBdeb-origin\fR(5). Ces
lignes de commentaires sont ignor\('ees, m\(^eme entre deux lignes de
continuation. Elles ne peuvent terminer les lignes logiques.
.Sp
Tous les fichiers de contr\(^ole doivent \(^etre encod\('es en \s-1UTF\-8.\s0
.RE
.SH "VOIR AUSSI"
.IX Header "VOIR AUSSI"
\&\fB\s-1RFC822\s0\fR, \fB\s-1RFC5322\s0\fR.
.SH "TRADUCTION"
.IX Header "TRADUCTION"
Ariel \s-1VARDI\s0 <ariel.vardi@freesbee.fr>, 2002.
Philippe Batailler, 2006.
Nicolas Fran\(,cois, 2006.
Veuillez signaler toute erreur \(`a <debian\-l10n\-french@lists.debian.org>.
