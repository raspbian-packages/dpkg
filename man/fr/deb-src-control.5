.\" Automatically generated by Pod::Man 4.11 (Pod::Simple 3.35)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "deb-src-control 5"
.TH deb-src-control 5 "2020-08-02" "1.20.5" "dpkg suite"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NOM"
.IX Header "NOM"
deb-src-control \- Format du fichier principal de contr\(^ole dans les paquets
source Debian
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
\&\fBdebian/control\fR
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
Each Debian source package contains the master \(Fo\fBdebian/control\fR\(Fc file, and
its format is a superset of the \fBcontrol\fR file shipped in Debian binary
packages, see \fBdeb-control\fR(5).
.PP
This file contains at least 2 paragraphs, separated by a blank line.  The
first paragraph lists all information about the source package in general,
while each following paragraph describes exactly one binary package. Each
paragraph consists of at least one field. A field starts with a fieldname,
such as \fBPackage\fR or \fBSection\fR (case insensitive), followed by a colon,
the body of the field and a newline.  Multi-line fields are also allowed,
but each supplementary line, without a fieldname, should start with at least
one space. The content of the multi-line fields is generally joined to a
single line by the tools (except in the case of the \fBDescription\fR field,
see below). To insert empty lines into a multi-line field, insert a dot
after the space.  Lines starting with a \(oq\fB#\fR\(cq are treated as comments.
.SH "LES CHAMPS SOURCE"
.IX Header "LES CHAMPS SOURCE"
.IP "\fBSource:\fR \fInom-du-paquet-source\fR (requis)" 4
.IX Item "Source: nom-du-paquet-source (requis)"
La valeur de ce champ est le nom du paquet source et doit correspondre au
nom du paquet source dans le fichier debian/changelog. Un nom de paquet doit
\(^etre constitu\('e uniquement de lettres minuscules (a\-z), de chiffres (0\-9),
des caract\(`eres plus (+) et moins (\-) et de points (.). Les noms de paquets
doivent comporter au moins deux caract\(`eres et doivent commencer par un
caract\(`ere alphanum\('erique (a\-z0\-9) en minuscule.
.IP "\fBMaintainer:\fR \fInom\-complet\-et\-adresse\-\('electronique\fR (recommand\('e)" 4
.IX Item "Maintainer: nom-complet-et-adresse-\('electronique (recommand\('e)"
Le format de ce champ sera \(Fo Jean Dupont <jdupont@foo.com> \(Fc ; il
indique le responsable actuel du paquet, par opposition \(`a l'auteur du
logiciel ou au responsable originel.
.IP "\fBUploaders:\fR \fInom\-complet\-et\-adresse\-\('electronique\fR" 4
.IX Item "Uploaders: nom-complet-et-adresse-\('electronique"
Affiche les noms et les adresses \('electroniques des co-responsables du
paquet, au m\(^eme format que le champ \fBMaintainer\fR. Des co-responsables
multiples peuvent \(^etre s\('epar\('es par des virgules.
.IP "\fBStandards-Version:\fR \fIcha\(^ine\-de\-la\-version\fR" 4
.IX Item "Standards-Version: cha\(^ine-de-la-version"
Ce champ indique la version la plus r\('ecente des normes de la charte de la
distribution auxquelles ce paquet se conforme.
.IP "\fBDescription\fR \fIdescription-courte\fR" 4
.IX Item "Description description-courte"
.PD 0
.IP "\fB\fR \fIdescription-longue\fR" 4
.IX Item " description-longue"
.PD
Le format de la description du paquet est un r\('esum\('e bref sur la premi\(`ere
ligne (apr\(`es le champ \fBDescription\fR). Les lignes suivantes peuvent servir \(`a
une description plus longue et plus d\('etaill\('ee. Chaque ligne de cette
description longue doit \(^etre pr\('ec\('ed\('ee d'une espace ; quand c'est une ligne
blanche, elle doit contenir un seul \(Fo \fB.\fR \(Fc apr\(`es cette espace.
.IP "\fBHomepage:\fR \fI\s-1URL\s0\fR" 4
.IX Item "Homepage: URL"
\&\s-1URL\s0 de la page d'accueil du projet amont.
.IP "\fBBugs:\fR \fI\s-1URL\s0\fR" 4
.IX Item "Bugs: URL"
L'\fI\s-1URL\s0\fR du syst\(`eme de suivi de bogues (\s-1BTS\s0) de ce paquet. Le format utilis\('e
est \fItype_de_bts\fR\fB://\fR\fIadresse_du_btsE\fR, par exemple
\&\fBdebbugs://bugs.debian.org\fR. Ce champ est en g\('en\('eral inutile.
.IP "\fBRules-Requires-Root:\fR \fBno\fR|\fBbinary-targets\fR|\fImots\-cl\('es\-impl\('ementation\fR" 4
.IX Item "Rules-Requires-Root: no|binary-targets|mots-cl\('es-impl\('ementation"
Ce champ est utilis\('e pour indiquer si le fichier \fBdebian/rules\fR exige des
droits (fake)root pour ex\('ecuter certaines de ses cibles et quand, si c'est
le cas.
.RS 4
.IP "\fBno\fR" 4
.IX Item "no"
Les cibles binaires n'exigeront aucun (fake)root.
.IP "\fBbinary-targets\fR" 4
.IX Item "binary-targets"
Les cibles binaires doivent toujours \(^etre ex\('ecut\('ees avec les droits
(fake)root. C'est la valeur par d\('efaut quand le champ est omis ; l'ajout du
champ avec un \fBbinary-targets\fR explicite, alors qu'il n'est pas strictement
n\('ecessaire, marque qu'il a \('et\('e analys\('e pour cette exigence.
.IP "\fImots\-cl\('es\-impl\('ementation\fR" 4
.IX Item "mots-cl\('es-impl\('ementation"
Il s'agit d'une liste, s\('epar\('ee par des espaces, de mots\-cl\('es qui d\('efinissent
quand (fake)root est exig\('e.
.Sp
Les mots\-cl\('es sont compos\('es de \fIespace-de-nommage\fR/\fIcas\fR. La partie
\&\fIespace-de-nommage\fR ne peut pas inclure de \(Fo / \(Fc ou d'espace. La partie
\&\fIcas\fR ne peut pas inclure d'espace. Par ailleurs, les deux parties doivent
\(^etre enti\(`erement compos\('ees de caract\(`eres \s-1ASCII\s0 imprimables.
.Sp
Chaque outil ou paquet d\('efinira un espace de nommage nomm\('e d'apr\(`es lui\-m\(^eme
et fournira le nombre des cas o\(`u (fake)root est exig\('e. (Voir \(Fo Mots\-cl\('es
fournis par l'impl\('ementation \(Fc dans \fIrootless\-builds.txt\fR).
.Sp
Quand le champ est d\('efini pour un des \fImots\-cl\('es\-impl\('ementation\fR, le
constructeur exposera une interface qui est utilis\('ee pour ex\('ecuter une
commande avec les droits (fake)root. (Voir \(Fo \s-1API\s0 pour obtenir les droits
root \(Fc dans \fIrootless\-builds.txt\fR).
.RE
.RS 4
.RE
.IP "\fBTestsuite:\fR \fIliste-de-noms\fR" 4
.IX Item "Testsuite: liste-de-noms"
.PD 0
.IP "\fBTestsuite-Triggers:\fR \fIliste-de-paquets\fR" 4
.IX Item "Testsuite-Triggers: liste-de-paquets"
.PD
Ces champs sont d\('ecrits dans la page de manuel de \fBdsc\fR(5), car ils sont
cr\('e\('es \(`a partir des informations d\('eduites de \fBdebian/tests/control\fR ou
copi\('es litt\('eralement dans le fichier \(Fo control \(Fc du paquet source.
.IP "\fBVcs-Arch:\fR \fI\s-1URL\s0\fR" 4
.IX Item "Vcs-Arch: URL"
.PD 0
.IP "\fBVcs-Bzr:\fR \fI\s-1URL\s0\fR" 4
.IX Item "Vcs-Bzr: URL"
.IP "\fBVcs-Cvs:\fR \fI\s-1URL\s0\fR" 4
.IX Item "Vcs-Cvs: URL"
.IP "\fBVcs-Darcs:\fR \fI\s-1URL\s0\fR" 4
.IX Item "Vcs-Darcs: URL"
.IP "\fBVcs-Git:\fR \fI\s-1URL\s0\fR" 4
.IX Item "Vcs-Git: URL"
.IP "\fBVcs-Hg:\fR \fI\s-1URL\s0\fR" 4
.IX Item "Vcs-Hg: URL"
.IP "\fBVcs-Mtn:\fR \fI\s-1URL\s0\fR" 4
.IX Item "Vcs-Mtn: URL"
.IP "\fBVcs-Svn:\fR \fI\s-1URL\s0\fR" 4
.IX Item "Vcs-Svn: URL"
.PD
Ce champ indique l'\fI\s-1URL\s0\fR du syst\(`eme de gestion de version utilis\('e pour la
gestion du paquet. Les syst\(`emes g\('er\('es sont \fBArch\fR, \fBBzr\fR (Bazaar), \fBCvs\fR,
\&\fBDarcs\fR, \fBGit\fR, \fBHg\fR (Mercurial), \fBMtn\fR (Monotone) et \fBSvn\fR
(Subversion). En g\('en\('eral, ce champ fait r\('ef\('erence \(`a la derni\(`ere version du
paquet, c'est\-\(`a\-dire la branche principale ou le \(Fo trunk \(Fc.
.IP "\fBVcs-Browser:\fR \fI\s-1URL\s0\fR" 4
.IX Item "Vcs-Browser: URL"
Indique l'\fI\s-1URL\s0\fR de l'interface web permettant de parcourir le d\('ep\(^ot du
syst\(`eme de gestion de version.
.IP "\fBOrigin:\fR \fInom\fR" 4
.IX Item "Origin: nom"
Indique le nom de la distribution dont le paquet provient. Ce champ n'est
souvent pas n\('ecessaire.
.IP "\fBSection:\fR \fIsection\fR" 4
.IX Item "Section: section"
Champ g\('en\('eral qui indique la cat\('egorie d'un paquet ; cette cat\('egorie est
fond\('ee sur le programme que ce paquet installe. \fButils\fR, \fBnet\fR, \fBmail\fR,
\&\fBtext\fR, \fBx11\fR, etc., repr\('esentent quelques cat\('egories habituelles.
.IP "\fBPriority:\fR \fIpriorit\('e\fR" 4
.IX Item "Priority: priorit\('e"
D\('efinit l'importance du paquet \(`a l'int\('erieur du syst\(`eme
g\('en\('eral. \fBrequired\fR, \fBstandard\fR, \fBoptional\fR, \fBextra\fR, etc., repr\('esentent
des priorit\('es habituelles.
.Sp
Les champs \fBSection\fR et \fBPriority\fR poss\(`edent un ensemble d\('efini de valeurs
accept\('ees, tir\('e de la Charte particuli\(`ere de la distribution.
.IP "\fBBuild-Depends:\fR \fIliste-de-paquets\fR" 4
.IX Item "Build-Depends: liste-de-paquets"
Liste de paquets \(`a installer et configurer pour pouvoir construire \(`a partir
du paquet source. Ces d\('ependances doivent \(^etre satisfaites lors de la
construction des paquets binaires d\('ependant ou non de l'architecture, et des
paquets source. Ajouter une d\('ependance \(`a ce champ n'aura pas exactement le
m\(^eme effet que de l'inclure \(`a la fois dans \fBBuild-Depends-Arch\fR et
\&\fBBuild-Depends-Indep\fR, parce que la d\('ependance a aussi besoin d'\(^etre prise
en compte lors de la construction du paquet source.
.IP "\fBBuild-Depends-Arch:\fR\fIliste-de-paquets\fR" 4
.IX Item "Build-Depends-Arch:liste-de-paquets"
Liste analogue \(`a \fBBuild-Depends\fR, mais restreinte aux paquets n\('ecessaires
pour construire les paquets d\('ependants de l'architecture. Les paquets
indiqu\('es dans \fBBuild-Depends\fR sont alors \('egalement install\('es. Ce champ est
g\('er\('e depuis la version 1.16.4 de dpkg ; pour pouvoir construire des paquets
avec des versions plus anciennes de dpkg, il est pr\('ef\('erable d'utiliser
\&\fBBuild-Depends\fR.
.IP "\fBBuild-Depends-Indep:\fR \fIliste-de-paquets\fR" 4
.IX Item "Build-Depends-Indep: liste-de-paquets"
Liste analogue \(`a \fBBuild-Depends\fR, mais restreinte aux paquets n\('ecessaires
pour construire les paquets ind\('ependants de l'architecture. Les paquets
indiqu\('es dans \fBBuild-Depends\fR sont alors aussi install\('es.
.IP "\fBBuild-Conflicts:\fR \fIliste de paquets\fR" 4
.IX Item "Build-Conflicts: liste de paquets"
Liste de paquets qui ne doivent pas \(^etre install\('es lors de la construction
du paquet, par exemple s'ils interf\(`erent avec le syst\(`eme de construction
utilis\('e. Si une d\('ependance est ajout\('ee \(`a cette liste, l'effet sera le m\(^eme
que si elle \('etait ajout\('ee \(`a la fois dans \fBBuild-Conflicts-Arch\fR et
\&\fBBuild-Conflicts-Indep\fR, en ayant de plus l'effet d'\(^etre prise en compte
pour les constructions de paquets uniquement source (\(Fo source-only
builds \(Fc).
.IP "\fBBuild-Conflicts-Arch:\fR \fIliste-de-paquets\fR" 4
.IX Item "Build-Conflicts-Arch: liste-de-paquets"
Identique \(`a \fBBuild-Conflicts\fR, mais n'est prise en compte que pour les
paquets d\('ependants de l'architecture. Ce champ est g\('er\('e depuis la
version 1.16.4 de dpkg ; pour pouvoir construire des paquets avec des
versions plus anciennes de dpkg, il est pr\('ef\('erable d'utiliser
\&\fBBuild-Conflicts\fR.
.IP "\fBBuild-Conflicts-Indep:\fR \fIliste-de-paquets\fR" 4
.IX Item "Build-Conflicts-Indep: liste-de-paquets"
liste analogue \(`a \fBBuild-Conflicts\fR mais restreinte \(`a la construction des
paquets ind\('ependants de l'architecture.
.PP
La syntaxe des champs \fBBuild-Depends\fR, \fBBuild-Depends-Arch\fR et
\&\fBBuild-Depends-Indep\fR est une liste de groupes contenant des paquets
alternatifs. Chaque groupe est une liste de paquets s\('epar\('es par des barres
verticales (le symbole du tube) \(Fo \fB|\fR \(Fc. Les groupes sont s\('epar\('es par des
virgules \(Fo \fB,\fR \(Fc, et la liste peut finir par une virgule qui peut \(^etre
\('elimin\('ee lors de la cr\('eation des champs pour \fBdeb-control\fR(5) (depuis
dpkg 1.10.14). Une virgule repr\('esente un \(Fo \s-1ET\s0 \(Fc logique et une barre
verticale repr\('esente un \(Fo \s-1OU\s0 \(Fc logique ; le tube repr\('esente un lien plus
fort. Chaque nom de paquet est suivi de fa\(,con optionnelle par un type
d'architecture entre crochets apr\(`es deux-points \(Fo \fB:\fR \(Fc, \('eventuellement
suivi par un num\('ero de version entre parenth\(`eses \(Fo \fB(\fR \(Fc et \(Fo \fB)\fR \(Fc, une
sp\('ecification d'architecture entre crochets \(Fo \fB[\fR \(Fc et \(Fo \fB]\fR \(Fc, et une
formule de restriction constitu\('ee d'une ou plusieurs listes de noms de
profil entre chevrons \(Fo \fB<\fR \(Fc et \(Fo \fB>\fR \(Fc.
.PP
La syntaxe des champs \fBBuild-Conflicts\fR, \fBBuild-Conflicts-Arch\fR et
\&\fBBuild-Conflicts-Indep\fR est une liste de paquets s\('epar\('es par des virgules
qui repr\('esentent le \(Fo \s-1ET\s0 \(Fc logique et peut finir par une virgule qui peut
\(^etre \('elimin\('ee lors de la cr\('eation des champs pour \fBdeb-control\fR(5) (depuis
dpkg 1.10.14). L'indication de paquets alternatifs avec une barre verticale
(le symbole du tube) \(Fo | \(Fc n'est pas prise en charge. Chaque nom de paquet
peut \(^etre suivi de fa\(,con optionnelle par un num\('ero de version entre
parenth\(`eses, un type d'architecture entre crochets et une formule de
restriction constitu\('ee d'une ou plusieurs listes de noms de profil entre
chevrons.
.PP
Un nom de type d'architecture peut \(^etre un nom d'architecture r\('eelle de
Debian (depuis dpkg 1.16.5), \fBany\fR (depuis dpkg 1.16.2) ou \fBnative\fR
(depuis dpkg 1.16.5). S'il est omis, la valeur par d\('efaut des champs
\&\fBBuild-Depends\fR est l'architecture de l'h\(^ote actuel, la valeur par d\('efaut
des champs \fBBuild-Conflicts\fR est \fBany\fR. Un nom d'architecture r\('eelle de
Debian correspondra exactement \(`a l'architecture pour ce nom de paquet,
\&\fBany\fR correspondra \(`a toute architecture pour ce nom de paquet si le paquet
a \('et\('e marqu\('e \fBMulti-Arch: allowed\fR, et \fBnative\fR correspondra \(`a
l'architecturede construction actuelle si le paquet n'a \('et\('e marqu\('e
\&\fBMulti-Arch: foreign\fR.
.PP
Une contrainte sur le num\('ero de version peut commencer par
\(Fo \fB>>\fR \(Fc, et dans ce cas toute version sup\('erieure correspondra, et
il peut indiquer (ou pas) le num\('ero de r\('evision pour le paquet Debian (les
deux num\('eros \('etant s\('epar\('es par un trait d'union). Voici les relations
accept\('ees pour les versions : \(Fo \fB>>\fR \(Fc pour sup\('erieur \(`a,
\(Fo \fB<<\fR \(Fc pour inf\('erieur \(`a, \(Fo \fB>=\fR \(Fc pour sup\('erieur ou \('egal,
\(Fo \fB<=\fR \(Fc pour inf\('erieur ou \('egal, et \(Fo \fB=\fR \(Fc pour \('egal \(`a.
.PP
Une indication d'architecture consiste en un ou plusieurs noms
d'architectures, s\('epar\('es par des espaces. Un nom d'architecture peut \(^etre
pr\('ec\('ed\('e d'un point d'exclamation qui correspond alors au \(Fo \s-1NON\s0 \(Fc logique.
.PP
Une formule de restriction consiste en une ou plusieurs listes de
restriction s\('epar\('ees par des espaces. Chaque liste de restriction est
incluse entre chevrons. Les \('el\('ements des listes de restriction sont des noms
de profils de construction s\('epar\('es par des espaces et pouvant \(^etre pr\('efix\('es
d'un point d'exclamation repr\('esentant un \(Fo \s-1NON\s0 \(Fc logique. Une formule de
restriction repr\('esente une forme normale disjonctive.
.PP
Veuillez noter que les d\('ependances des paquets du jeu \fBbuild-essential\fR
peuvent \(^etre omises et qu'il n'est pas possible de d\('eclarer des conflits
avec ces paquets. La liste des paquets concern\('es est fournie par le paquet
build-essential.
.SH "CHAMPS BINAIRES"
.IX Header "CHAMPS BINAIRES"
Veuillez noter que les champs \fBPriority\fR, \fBSection\fR et \fBHomepage\fR peuvent
\(^etre plac\('es dans le paragraphe d'un paquet binaire et leur valeur remplace
alors celle du paquet source.
.IP "\fBPackage:\fR \fInom-du-paquet-binaire\fR (requis)" 4
.IX Item "Package: nom-du-paquet-binaire (requis)"
Ce champ sert \(`a indiquer le nom du paquet binaire. Les restrictions sont les
m\(^emes que celles des paquets source.
.IP "\fBPackage-Type:\fR \fBdeb\fR|\fBudeb\fR|\fItype\fR" 4
.IX Item "Package-Type: deb|udeb|type"
Ce champ indique le type de paquet. La valeur \fBudeb\fR est \(`a utiliser pour
les paquets \(`a taille contr\(^ol\('ee utilis\('es par l'installateur Debian. La valeur
\&\fBdeb\fR est la valeur par d\('efaut qui est utilis\('ee si le champ n'est pas
pr\('esent. De nouveaux types pourraient \(^etre ajout\('es au fil du temps.
.IP "\fBArchitecture:\fR \fIarch\fR|\fBall\fR|\fBany\fR (requis)" 4
.IX Item "Architecture: arch|all|any (requis)"
Ce champ indique l'architecture mat\('erielle sur laquelle le paquet peut \(^etre
utilis\('e. Les paquets qui peuvent \(^etre utilis\('es sur toute architecture
doivent utiliser le champ \fBany\fR. Les paquets ind\('ependants de
l'architecture, tels les scripts shell ou Perl ou la documentation utilisent
la valeur \fBall\fR. Pour restreindre un paquet \(`a certaines architectures,
leurs noms doivent \(^etre indiqu\('es s\('epar\('es par des espaces. Il est \('egalement
possible d'utiliser des noms g\('en\('eriques d'architectures dans cette liste
(voir \fBdpkg-architecture\fR(1) pour plus d'informations sur ces architectures
g\('en\('eriques).
.IP "\fBBuild-Profiles:\fR \fIformule-de-restriction\fR" 4
.IX Item "Build-Profiles: formule-de-restriction"
Ce champ pr\('ecise les conditions pour lesquelles ce paquet binaire est ou
n'est pas construit. Cette condition est exprim\('ee en utilisant la m\(^eme
syntaxe de formule de restriction qui provient du champ \fBBuild-Depends\fR.
.Sp
Si un paragraphe de paquet binaire ne contient pas ce champ, cela signifie
de fa\(,con implicite que ce paquet se construit avec tous les profils de
construction (y compris aucun profil).
.Sp
En d'autres termes, si un paragraphe de paquet binaire est annot\('e d'un champ
\&\fBBuild-Profiles\fR non vide, alors, ce paquet binaire est cr\('e\('e si et
seulement si la condition exprim\('ee par l'expression en forme normale
conjonctive est \('evalu\('ee \(`a vrai.
.IP "\fBProtected:\fR \fBByes\fR|\fBno\fR" 4
.IX Item "Protected: Byes|no"
.PD 0
.IP "\fBEssential:\fR \fByes\fR|\fBno\fR" 4
.IX Item "Essential: yes|no"
.IP "\fBBuild-Essential:\fR \fByes\fR|\fBno\fR" 4
.IX Item "Build-Essential: yes|no"
.IP "\fBMulti-Arch:\fR \fBsame\fR|\fBforeign\fR|\fBallowed\fR|\fBno\fR" 4
.IX Item "Multi-Arch: same|foreign|allowed|no"
.IP "\fBTag:\fR \fIliste\-d'\('etiquettes\fR" 4
.IX Item "Tag: liste-d'\('etiquettes"
.IP "\fBDescription:\fR \fIdescription-courte\fR (recommand\('e)" 4
.IX Item "Description: description-courte (recommand\('e)"
.PD
Ces champs sont d\('ecrits dans la page de manuel de \fBdeb-control\fR(5), car ils
sont copi\('es litt\('eralement dans le fichier \(Fo control \(Fc du paquet binaire.
.IP "\fBDepends:\fR \fIliste-de-paquets\fR" 4
.IX Item "Depends: liste-de-paquets"
.PD 0
.IP "\fBPre-Depends:\fR \fIliste-de-paquets\fR" 4
.IX Item "Pre-Depends: liste-de-paquets"
.IP "\fBRecommends:\fR \fIliste-de-paquets\fR" 4
.IX Item "Recommends: liste-de-paquets"
.IP "\fBSuggests:\fR \fIliste-de-paquets\fR" 4
.IX Item "Suggests: liste-de-paquets"
.IP "\fBBreaks:\fR \fIliste-de-paquets\fR" 4
.IX Item "Breaks: liste-de-paquets"
.IP "\fBEnhances:\fR \fIliste-de-paquets\fR" 4
.IX Item "Enhances: liste-de-paquets"
.IP "\fBReplaces:\fR \fIliste-de-paquets\fR" 4
.IX Item "Replaces: liste-de-paquets"
.IP "\fBConflicts:\fR \fIliste-de-paquets\fR" 4
.IX Item "Conflicts: liste-de-paquets"
.IP "\fBProvides:\fR \fIliste-de-paquets\fR" 4
.IX Item "Provides: liste-de-paquets"
.IP "\fBBuilt-Using:\fR \fIliste-de-paquets\fR" 4
.IX Item "Built-Using: liste-de-paquets"
.PD
Ces champs d\('eclarent les relations entre les paquets. Ils sont discut\('es dans
la page de manuel de \fBdeb-control\fR(5). Quand ces champs se trouvent dans
\&\fIdebian/control\fR, ils peuvent aussi se terminer par une virgule (depuis
dpkg 1.10.14) ; ils comprennent des sp\('ecifications d'architecture et des
formules de restriction qui seront r\('eduites lors de la g\('en\('eration des champs
pour \fBdeb-control\fR(5).
.IP "\fBSubarchitecture:\fR \fIvaleur\fR" 4
.IX Item "Subarchitecture: valeur"
.PD 0
.IP "\fBKernel-Version:\fR \fIvaleur\fR" 4
.IX Item "Kernel-Version: valeur"
.IP "\fBInstaller-Menu-Item:\fR \fIvaleur\fR" 4
.IX Item "Installer-Menu-Item: valeur"
.PD
Ces champs sont utilis\('es par l'installateur dans les \fBudeb\fR et ne sont en
g\('en\('eral pas n\('ecessaires. Veuillez consulter
/usr/share/doc/debian\-installer/devel/modules.txt fourni avec le paquet
\&\fBdebian-installer\fR pour plus de d\('etails.
.SH "LES CHAMPS UTILISATEUR"
.IX Header "LES CHAMPS UTILISATEUR"
Il est autoris\('e d'ajouter au fichier de contr\(^ole des champs suppl\('ementaires
d\('efinis par l'utilisateur. L'outil ignorera ces champs. Si vous souhaitez
que ces champs soient copi\('es dans ces fichiers de sortie, tels que les
paquets binaires, vous devez utiliser un sch\('ema de nommage personnalis\('e :
les champs d\('emarreront par un \fBX\fR, suivi de z\('ero ou plusieurs des lettres
\&\fB\s-1SBC\s0\fR et un trait d'union.
.IP "\fBS\fR" 4
.IX Item "S"
Ce champ appara\(^itra dans le fichier de contr\(^ole du paquet des sources, voir
\&\fBdsc\fR(5).
.IP "\fBB\fR" 4
.IX Item "B"
Le champ appara\(^itra dans le fichier de contr\(^ole du paquet binaire, voir
\&\fBdeb-control\fR(5).
.IP "\fBC\fR" 4
.IX Item "C"
Le champ appara\(^itra dans le fichier de contr\(^ole d'envoi (.changes), voir
\&\fBdeb-changes\fR(5).
.PP
Veuillez noter que les pr\('efixes \fBX\fR[\fB\s-1SBC\s0\fR]\fB\-\fR sont retir\('es quand les
champs sont copi\('es dans les fichiers de sortie. Un champ \fBXC-Approved-By\fR
appara\(^itra sous la forme \fBApproved-By\fR dans le fichier des modifications et
n'appara\(^itra pas dans les fichiers de contr\(^ole des paquets binaires ou
source.
.PP
Il faut prendre en compte le fait que ces champs d\('efinis par l'utilisateur
se serviront de l'espace de nommage global lequel pourrait, dans le futur,
entrer en conflit avec des champs officiellement reconnus. Pour \('eviter de
telles situations, il est conseill\('e de les pr\('efixer avec \fBPrivate\-\fR
(exemple : \fBXB-Private-New-Field\fR).
.SH "EXEMPLE"
.IX Header "EXEMPLE"
.Vb 10
\& # Comment
\& Source: dpkg
\& Section: admin
\& Priority: required
\& Maintainer: Dpkg Developers <debian\-dpkg@lists.debian.org>
\& # this field is copied to the binary and source packages
\& XBS\-Upstream\-Release\-Status: stable
\& Homepage: https://wiki.debian.org/Teams/Dpkg
\& Vcs\-Browser: https://git.dpkg.org/cgit/dpkg/dpkg.git
\& Vcs\-Git: https://git.dpkg.org/git/dpkg/dpkg.git
\& Standards\-Version: 3.7.3
\& Build\-Depends: pkg\-config, debhelper (>= 4.1.81),
\&  libselinux1\-dev (>= 1.28\-4) [!linux\-any]
\&
\& Package: dpkg\-dev
\& Section: utils
\& Priority: optional
\& Architecture: all
\& # this is a custom field in the binary package
\& XB\-Mentoring\-Contact: Raphael Hertzog <hertzog@debian.org>
\& Depends: dpkg (>= 1.14.6), perl5, perl\-modules, cpio (>= 2.4.2\-2),
\&  bzip2, lzma, patch (>= 2.2\-1), make, binutils, libtimedate\-perl
\& Recommends: gcc | c\-compiler, build\-essential
\& Suggests: gnupg, debian\-keyring
\& Conflicts: dpkg\-cross (<< 2.0.0), devscripts (<< 2.10.26)
\& Replaces: manpages\-pl (<= 20051117\-1)
\& Description: Debian package development tools
\&  This package provides the development tools (including dpkg\-source)
\&  required to unpack, build and upload Debian source packages.
\&  .
\&  Most Debian source packages will require additional tools to build;
\&  for example, most packages need make and the C compiler gcc.
.Ve
.SH "VOIR AUSSI"
.IX Header "VOIR AUSSI"
\&\fBdeb-control\fR(5), \fBdeb-version\fR(7), \fBdpkg-source\fR(1)
.SH "TRADUCTION"
.IX Header "TRADUCTION"
Ariel \s-1VARDI\s0 <ariel.vardi@freesbee.fr>, 2002.
Philippe Batailler, 2006.
Nicolas Fran\(,cois, 2006.
Veuillez signaler toute erreur \(`a <debian\-l10n\-french@lists.debian.org>.
