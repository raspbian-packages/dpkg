.\" Automatically generated by Pod::Man 4.11 (Pod::Simple 3.35)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "deb-buildinfo 5"
.TH deb-buildinfo 5 "2020-08-02" "1.20.5" "dpkg suite"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NOM"
.IX Header "NOM"
deb-buildinfo \- Format des fichiers d'information de construction de Debian
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
\&\fInom-du-fichier\fR\fB.buildinfo\fR
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
Chaque construction de paquet source Debian peut enregistrer les
informations de construction dans un fichier de contr\(^ole \fB.buildinfo\fR qui
contient un certain nombre de champs. Chaque champ commence par une
\('etiquette, telle que \fBSource\fR ou \fBBinary\fR (la casse n'importe pas), suivie
d'un \(Fo : \(Fc et du contenu du champ. Les champs sont s\('epar\('es seulement par des
\('etiquettes de champ. En d'autres termes, le contenu d'un champ peut
s'\('etendre sur plusieurs lignes, mais les outils d'installation joindront en
g\('en\('eral les lignes pendant le traitement du contenu du champ (sauf dans le
cas des champs \(`a lignes multiples  \fBBinary-Only-Changes\fR,
\&\fBInstalled-Build-Depends\fR, \fBEnvironment\fR, \fBChecksums\-Md5\fR,
\&\fBChecksums\-Sha1\fR et \fBChecksums\-Sha256\fR, voir ci-dessous).
.PP
Les donn\('ees de contr\(^ole pourraient \(^etre incluses dans une signature OpenPGP
\(Fo \s-1ASCII\s0 Armored \(Fc, comme sp\('ecifi\('e dans \s-1RFC4880.\s0
.PP
Le nom du fichier \fB.buildinfo\fR d\('ependra du type de construction et sera
aussi sp\('ecifique que n\('ecessaire mais pas plus ; lorsque la construction
inclut \fBany\fR, le nom sera
\&\fInom-source\fR\fB_\fR\fIversion-binaire\fR\fB_\fR\fIarch\fR\fB.buildinfo\fR, ou sinon pour
une construction \fBall\fR le nom sera
\&\fInom-source\fR\fB_\fR\fIbinary-version\fR\fB_\fR\fBall.buildinfo\fR ou encore pour une
construction qui inclut \fBsource\fR le nom sera
\&\fInom-source\fR\fB_\fR\fIversion-source\fR\fB_\fR\fBsource.buildinfo\fR.
.SH "LES CHAMPS"
.IX Header "LES CHAMPS"
.IP "\fBFormat:\fR \fIversion-format\fR (requis)" 4
.IX Item "Format: version-format (requis)"
La valeur de ce champ d\('eclare la version du format du fichier. La syntaxe de
la valeur du champ est un num\('ero de version avec un composant majeur et
mineur. Les modifications incompatibles avec les versions pr\('ec\('edentes du
format incr\('ementeront la version majeure, tandis que les modifications
compatibles (telles que les ajouts de champ) incr\('ementeront la version
mineure. La version de format actuelle est \fB1.0\fR.
.IP "\fBSource:\fR \fInom-source\fR [\fB(\fR\fIversion-source\fR\fB)\fR] (requis)" 4
.IX Item "Source: nom-source [(version-source)] (requis)"
Le nom du paquet source. Si la version du source diff\(`ere de la version
binaire, alors le \fInom-source\fR sera suivi par une \fIversion-source\fR entre
parenth\(`eses. Cela peut arriver quand la construction concerne un envoi
seulement binaire \s-1NMU\s0 (\(Fo non-maintainer upload \(Fc).
.IP "\fBBinary:\fR \fIliste-paquets-binaires\fR (requis selon le contexte)" 4
.IX Item "Binary: liste-paquets-binaires (requis selon le contexte)"
This folded field is a space-separated list of binary packages built.  If
the build is source-only, then the field is omitted (since dpkg 1.20.0).
.IP "\fBArchitecture:\fR \fIliste-architectures\fR (requis)" 4
.IX Item "Architecture: liste-architectures (requis)"
Ce champ, s\('epar\('e par des espaces, liste les architectures des fichiers
actuellement en construction. Voici quelques architectures habituelles :
\&\fBamd64\fR, \fBarmel\fR, \fBi386\fR, etc. Remarquez que l'option \fBall\fR signifie que
le paquet est ind\('ependant de toute architecture. Si le source du paquet est
aussi en construction, l'entr\('ee sp\('eciale \fBsource\fR est aussi pr\('esente. Les
architectures joker ne doivent jamais \(^etre pr\('esentes dans la liste.
.IP "\fBVersion:\fR \fIcha\(^ine\-de\-la\-version\fR (requis)" 4
.IX Item "Version: cha\(^ine-de-la-version (requis)"
C'est classiquement le num\('ero de version du paquet d'origine dans la forme
choisie par l'auteur du programme. Il peut y avoir aussi un num\('ero de
r\('evision Debian (pour les paquets non natifs). Le format exact et
l'algorithme de tri sont d\('ecrits dans \fBdeb-version\fR(7).
.IP "\fBBinary-Only-Changes:\fR" 4
.IX Item "Binary-Only-Changes:"
.PD 0
.IP " \fIchangelog-entry\fR" 4
.IX Item " changelog-entry"
.PD
Ce champ \(`a lignes multiples contient le texte concat\('en\('e des entr\('ees de
changelog pour un envoi seulement binaire (binNMU), si c'est le cas. Pour
faire de ce champ un champ \(`a lignes multiples valable, les lignes vides sont
remplac\('ees par un point \fB\(Fo . \(Fc\fR et toutes les lignes sont indent\('ees par une
seule espace. Le contenu exact d\('epend du format du changelog.
.IP "\fBChecksums\-Md5:\fR (requis)" 4
.IX Item "Checksums-Md5: (requis)"
.PD 0
.IP "\fBChecksums\-Sha1:\fR (requis)" 4
.IX Item "Checksums-Sha1: (requis)"
.IP "\fBChecksums\-Sha256:\fR (requis)" 4
.IX Item "Checksums-Sha256: (requis)"
.IP " \fIchecksum\fR \fIsize\fR \fIfilename\fR" 4
.IX Item " checksum size filename"
.PD
Ces champs \(`a lignes multiples contiennent la liste des fichiers avec la
somme de contr\(^ole et la taille de chacun. Ces champs ont la m\(^eme syntaxe et
ne diff\(`erent que par l'algorithme de somme de contr\(^ole utilis\('e : \s-1MD5\s0 pour
\&\fBChecksums\-Md5\fR, \s-1SHA\-1\s0 pour \fBChecksums\-Sha1\fR et \s-1SHA\-256\s0 pour
\&\fBChecksums\-Sha256\fR.
.Sp
La premi\(`ere ligne de la valeur du champ (la partie sur la m\(^eme ligne que le
nom du champ suivi par deux-points) est toujours vide. Le contenu du champ
est exprim\('e par des lignes de continuation, une ligne par fichier. Chaque
ligne consiste en des entr\('ees s\('epar\('ees par des espaces d\('ecrivant le
fichier :la somme de contr\(^ole, la taille du fichier et le nom du fichier.
.Sp
Ces champs listent tous les fichiers qui composent la construction.
.IP "\fBBuild-Origin:\fR \fInom\fR" 4
.IX Item "Build-Origin: nom"
Nom de la distribution dont ce paquet provient.
.IP "\fBBuild-Architecture:\fR \fIarch\fR (requis)" 4
.IX Item "Build-Architecture: arch (requis)"
L'architecture Debian pour l'installation des paquets en construction. Les
architectures habituelles sont \fBamd64\fR, \fBarmel\fR, \fBi386\fR, etc.
.IP "\fBBuild-Date:\fR \fIdate-construction\fR" 4
.IX Item "Build-Date: date-construction"
La date \(`a laquelle le paquet a \('et\('e construit. Elle peut \(^etre au m\(^eme format
que la date dans les entr\('ees dans \fBdeb-changelog\fR(5).
.IP "\fBBuild-Kernel-Version:\fR \fIversion-du-noyau-de-construction\fR" 4
.IX Item "Build-Kernel-Version: version-du-noyau-de-construction"
La publication et la version (dans un format non sp\('ecifi\('e) du noyau ex\('ecut\('e
dans le syst\(`eme de construction. Ce champ va seulement \(^etre pr\('esent si le
constructeur l'a demand\('e explicitement, pour \('eviter de r\('ev\('eler des
informations potentiellement sensibles.
.IP "\fBBuild-Path:\fR \fIchemin-de-construction\fR" 4
.IX Item "Build-Path: chemin-de-construction"
The absolute build path, which correspond to the unpacked source tree.  This
field is only going to be present if the vendor has allowed it via some
pattern match to avoid leaking possibly sensitive information.
.Sp
Dans Debian et ses d\('eriv\('es, seuls les chemins de construction d\('ebutant par
\&\fI/build/\fR \('emettront ce champ.
.IP "\fBBuild-Tainted-By:\fR" 4
.IX Item "Build-Tainted-By:"
.PD 0
.IP " \fItaint-reason-list\fR" 4
.IX Item " taint-reason-list"
.PD
Ce champ coup\('e est une liste, s\('epar\('ee par des espaces, non exhaustive des
\('etiquettes de raison (form\('ees de caract\(`eres alphanum\('eriques et de tirets)
qui d\('efinissent pourquoi la construction actuelle a \('et\('e souill\('ee (depuis
dpkg 1.19.5).
.Sp
Dans Debian et ses d\('eriv\('ees, les \('etiquettes de raisons suivantes peuvent
\(^etre \('emises.
.RS 4
.IP "\fBmerged-usr-via-symlinks\fR" 4
.IX Item "merged-usr-via-symlinks"
Le syst\(`eme poss\(`ede un \fI/usr\fR fusionn\('e au moyen de liens symboliques. Cela
peut tromper \fBdpkg-query\fR, \fBdpkg-statoverride\fR, \fBdpkg-trigger\fR,
\&\fBupdate-alternatives\fR et tous les autres outils qui utilisent les noms de
chemin comme cl\('es de leurs bases de donn\('ees, parce que cela cr\('ee des
probl\(`emes d'alias du syst\(`eme de fichiers, et perturbe la compr\('ehension du
syst\(`eme de fichiers que \fBdpkg\fR a enregistr\('e dans sa base de donn\('ees. Pour
des syst\(`emes construits qui codent en dur les noms de chemin vers des
binaires ou des biblioth\(`eques particuliers sur les objets produits, cela
peut aussi produire des paquets qui seront incompatibles avec des syst\(`emes
de fichiers sans \fI/usr\fR fusionn\('e.
.IP "\fBusr-local-has-configs\fR" 4
.IX Item "usr-local-has-configs"
Le syst\(`eme a des fichiers de configuration dans \fI/usr/local/etc\fR.
.IP "\fBusr-local-has-includes\fR" 4
.IX Item "usr-local-has-includes"
Le syst\(`eme a des fichiers d'en\-t\(^ete dans \fI/usr/local/include\fR.
.IP "\fBusr-local-has-programs\fR" 4
.IX Item "usr-local-has-programs"
Le syst\(`eme a des programmes dans \fI/usr/local/bin\fR ou \fI/usr/local/sbin\fR.
.IP "\fBusr-local-has-libraries\fR" 4
.IX Item "usr-local-has-libraries"
Le syst\(`eme a des biblioth\(`eques statiques ou partag\('ees dans
\&\fI/usr/local/lib\fR.
.RE
.RS 4
.RE
.IP "\fBInstalled-Build-Depends:\fR (requis)" 4
.IX Item "Installed-Build-Depends: (requis)"
.PD 0
.IP " \fIpackage-list\fR" 4
.IX Item " package-list"
.PD
La liste des paquets install\('es et configur\('es que pourrait affecter le
processus de construction du paquet.
.Sp
La liste contient le nom de chaque paquet, \('eventuellement avec une
qualification d'architecture pour celles diff\('erentes, avec une restriction
de version pr\('ecise, s\('epar\('es par des virgules.
.Sp
La liste inclut tous les paquets essentiels, les paquets list\('es dans les
champs de contr\(^ole des sources \fBBuild-Depends\fR, \fBBuild-Depends-Arch\fR,
\&\fBBuild-Depends-Indep\fR, chaque d\('ependance interne sp\('ecifique au
distributeur, et toutes leurs d\('ependances r\('ecursives. Dans Debian et ses
d\('eriv\('es, une d\('ependance interne est \fBbuild-essential\fR.
.Sp
Pour les d\('ependances provenant des champs de contr\(^ole des sources, toutes
les alternatives de d\('ependance et tous les fournisseurs de paquets virtuels
d\('ependants seront inclus.
.IP "\fBEnvironment:\fR" 4
.IX Item "Environment:"
.PD 0
.IP " \fIvariable-list\fR" 4
.IX Item " variable-list"
.PD
La liste des variables d'environnement qui sont connues pour affecter le
processus de construction du paquet. Chaque variable d'environnement est
suivie d'un signe \('egal (\(Fo = \(Fc) et de la valeur de la variable prot\('eg\('e avec
des guillemets doubles (\(Fo " \(Fc) et des barres obliques inverses (\(Fo \e\e \(Fc).
.SH "VOIR AUSSI"
.IX Header "VOIR AUSSI"
\&\fBdeb-changes\fR(5), \fBdeb-version\fR(7), \fBdpkg-genbuildinfo\fR(1).
.SH "TRADUCTION"
.IX Header "TRADUCTION"
Ariel \s-1VARDI\s0 <ariel.vardi@freesbee.fr>, 2002.
Philippe Batailler, 2006.
Nicolas Fran\(,cois, 2006.
Veuillez signaler toute erreur \(`a <debian\-l10n\-french@lists.debian.org>.
