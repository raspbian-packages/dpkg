.\" Automatically generated by Pod::Man 4.11 (Pod::Simple 3.35)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "dpkg-buildpackage 1"
.TH dpkg-buildpackage 1 "2020-08-02" "1.20.5" "dpkg suite"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "BEZEICHNUNG"
.IX Header "BEZEICHNUNG"
dpkg-buildpackage \- Bin\(:ar\- oder Quellpakete aus Quellen bauen
.SH "\(:UBERSICHT"
.IX Header "\(:UBERSICHT"
\&\fBdpkg-buildpackage\fR [\fIOption\fR …]
.SH "BESCHREIBUNG"
.IX Header "BESCHREIBUNG"
\&\fBdpkg-buildpackage\fR ist ein Programm, das den Prozess des Bauens eines
Debian-Paketes automatisiert. Der Bauprozess besteht aus den folgenden
Schritten:
.IP "\fB1.\fR" 4
.IX Item "1."
Die Bauumgebung wird vorbereitet, indem verschiedene Umgebungsvariablen
gesetzt werden (siehe \fB\s-1UMGEBUNG\s0\fR), f\(:uhrt den \fBinit\fR\-Hook aus und ruft
\&\fBdpkg-source \-\-before\-build\fR auf (es sei denn, \fB\-T\fR oder \fB\-\-target\fR wurde
verwandt).
.IP "\fB2.\fR" 4
.IX Item "2."
Es wird gepr\(:uft, dass Bauabh\(:angigkeiten und \-konflikte erf\(:ullt sind (falls
\&\fB\-d\fR oder \fB\-\-no\-check\-builddeps\fR nicht angegeben ist).
.IP "\fB3.\fR" 4
.IX Item "3."
Falls eines oder mehrere spezielle Ziele mit der Option \fB\-T\fR oder
\&\fB\-\-target\fR ausgew\(:ahlt wurden, werden diese Ziele aufgerufen und es wird
hier beendet. Andernfalls wird der Hook \fBpreclean\fR ausgef\(:uhrt und
\&\fBfakeroot debian/ rules clean\fR aufgerufen, um den Bau-Baum zu bereinigen
(falls \fB\-nc\fR oder \fB\-\-no\-pre\-clean\fR nicht angegeben ist).
.IP "\fB4.\fR" 4
.IX Item "4."
Der Hook \fBsource\fR wird ausgef\(:uhrt und \fBdpkg-source \-b\fR aufgerufen, um das
Quellpaket zu erstellen (falls mit \fB\-\-build\fR oder \(:aquivalenten Optionen ein
\&\fBsource\fR (Quell\-)Bau erbeten wurde).
.IP "\fB5.\fR" 4
.IX Item "5."
Es f\(:uhrt den Hook \fBbuild\fR aus und ruft \fBdebian/rules\fR \fIBauziel\fR auf. Dann
f\(:uhrt es den Hook \fBbinary\fR aus, gefolgt von \fBfakeroot debian/rules\fR
\&\fIBin\(:arziel\fR auf (falls nicht ein reiner Quellbau mit \fB\-\-build=source\fR oder
\(:aquivalenten Optionen erbeten wurde). Beachten Sie, dass \fIBauziel\fR und
\&\fIBin\(:arziel\fR entweder \fBbuild\fR und \fBbinary\fR (Standardfall, oder falls
\&\fBany\fR\- und \fBall\fR\-Bau mit \fB\-\-build\fR oder \(:aquivalenten Optionen erbeten
wurde) oder \fBbuild-arch\fR und \fBbinary-arch\fR (falls ein \fBany\fR\- und nicht
\&\fBall\fR\-Bau mit \fB\-\-build\fR oder \(:aquivalenten Optionen erbeten wurde) oder
\&\fBbuild-indep\fR und \fBbinary-indep\fR (falls ein \fBall\fR\- und nicht \fBany\fR\-Bau
mit \fB\-\-build\fR oder \(:aquivalenten Optionen erbeten wurde).
.IP "\fB6.\fR" 4
.IX Item "6."
Der Hook \fBbuildinfo\fR wird ausgef\(:uhrt und \fBdpkg-genbuildinfo\fR aufgerufen,
um eine \fB.buildinfo\fR\-Datei zu erstellen. Viele Optionen von
\&\fBdpkg-buildpackage\fR werden an \fBdpkg-genbuildinfo\fR weitergeleitet.
.IP "\fB7.\fR" 4
.IX Item "7."
Die \fBchanges\fR\-Hooks werden ausgef\(:uhrt und \fBdpkg-genchanges\fR aufgerufen, um
eine \fB.changes\fR\-Datei zu erstellen. Der Name der \fB.changes\fR\-Datei wird von
der Art des Baus abh\(:angen und wird so spezifisch wie notwendig sein, aber
nicht mehr; f\(:ur einen Bau, der \fBany\fR enth\(:alt, wird der Name
\&\fIQuellname\fR\fB_\fR\fIBin\(:arversion\fR\fB_\fR\fIArch\fR\fB.changes\fR oder andernfalls f\(:ur
einen Bau, der \fBall\fR enth\(:alt, wird der Name
\&\fIQuellname\fR\fB_\fR\fIBin\(:arversion\fR\fB_\fR\fBall.changes\fR oder andernfalls f\(:ur einen
Bau, der \fBsource\fR enth\(:alt, wird der Name
\&\fIQuellname\fR\fB_\fR\fIQuellversion\fR\fB_\fR\fBsource.changes\fR lauten. Viele Optionen
von \fBdpkg-buildpackage\fR werden an \fBdpkg-genchanges\fR weitergegeben.
.IP "\fB8.\fR" 4
.IX Item "8."
Der Hook \fBpostclean\fR wird ausgef\(:uhrt und, falls \fB\-tc\fR oder \fB\-\-post\-clean\fR
angegeben ist, erneut \fBfakeroot debian/rules clean\fR aufgerufen.
.IP "\fB9.\fR" 4
.IX Item "9."
\&\fBdpkg-source \-\-after\-build\fR wird aufgerufen.
.IP "\fB10.\fR" 4
.IX Item "10."
Der Hook \fBcheck\fR wird ausgef\(:uhrt und ein Paketpr\(:ufprogramm f\(:ur die Datei
\&\fB.changes\fR aufgerufen (falls ein Befehl in \fB\s-1DEB_CHECK_COMMAND\s0\fR oder mit
\&\fB\-\-check\-command\fR angegeben ist).
.IP "\fB11.\fR" 4
.IX Item "11."
Der Hook \fBsign\fR wird ausgef\(:uhrt und \fBgpg\fR aufgerufen (so lange es sich
nicht um einen \(BqUNRELEASED\(lq\-Bau handelt oder \fB\-\-no\-sign\fR angegeben wurde),
um die \fB.dsc\fR\-Datei (falls vorhanden und \fB\-us\fR oder \fB\-\-unsigned\-source\fR
nicht angegeben wurde), die \fB.buildinfo\fR\-Datei (falls \fB\-ui\fR,
\&\fB\-\-unsigned\-buildinfo\fR, \fB\-uc\fR oder \fB\-\-unsigned\-changes\fR nicht angegeben
wurden) und die \fB.changes\fR\-Datei (falls \fB\-uc\fR oder \fB\-\-unsigned\-changes\fR
nicht angegeben wurde) zu signieren.
.IP "\fB12.\fR" 4
.IX Item "12."
Der Hook \fBdone\fR wird ausgef\(:uhrt.
.SH "OPTIONEN"
.IX Header "OPTIONEN"
Alle langen Optionen k\(:onnen auf der Befehlszeile oder im
\&\fBdpkg-buildpackage\fR\-System und Benutzerkonfigurationsdateien angegeben
werden. Jede Zeile in der Konfigurationsdatei ist entweder eine Option
(exakt die gleiche wie die Befehlszeilenoption, nur ohne f\(:uhrende
Bindestriche) oder ein Kommentar (falls sie mit \(bq\fB#\fR\(cq) beginnt).
.IP "\fB\-\-build=\fR\fITyp\fR" 4
.IX Item "--build=Typ"
Spezifiziert den Bau\-\fITyp\fR aus einer Kommata-getrennten Liste von
Komponenten (seit Dpkg 1.18.5). Wird an \fBdpkg-genchanges\fR weitergegeben.
.Sp
Die erlaubten Werte sind:
.RS 4
.IP "\fBsource\fR" 4
.IX Item "source"
Baut das Quellpaket.
.Sp
\&\fBHinweis\fR: Falls Sie diesen Wert alleine verwenden und falls Sie einfach
das Quellpaket aus einem sauberen Quellbaum (neu) bauen m\(:ochten, ist die
Verwendung von \fBdpkg-source\fR immer die bessere Option, da daf\(:ur keine
Bauabh\(:angigkeiten installiert sein m\(:ussen, die ansonsten ben\(:otigt werden, um
das Ziel \fBclean\fR aufzurufen.
.IP "\fBany\fR" 4
.IX Item "any"
Baut das architekturspezifische Bin\(:arpaket.
.IP "\fBall\fR" 4
.IX Item "all"
Baut die architekturunabh\(:angigen Bin\(:arpakete.
.IP "\fBbinary\fR" 4
.IX Item "binary"
Baut die architekturspezifischen und \-unabh\(:angigen Bin\(:arpakete. Dies ist ein
Alias f\(:ur \fBany,all\fR.
.IP "\fBfull\fR" 4
.IX Item "full"
Baut alles. Dies ist ein Alias f\(:ur \fBsource,any,all\fR und identisch zum
Standardfall, wenn keine Bauoptionen festgelegt werden.
.RE
.RS 4
.RE
.IP "\fB\-g\fR" 4
.IX Item "-g"
\(:Aquivalent zu \fB\-\-build=source,all\fR (seit Dpkg 1.17.11).
.IP "\fB\-G\fR" 4
.IX Item "-G"
\(:Aquivalent zu \fB\-\-build=source,any\fR (seit Dpkg 1.17.11).
.IP "\fB\-b\fR" 4
.IX Item "-b"
\(:Aquivalent zu \fB\-\-build=binary\fR oder \fB\-\-build=any,all\fR.
.IP "\fB\-B\fR" 4
.IX Item "-B"
\(:Aquivalent zu \fB\-\-build=any\fR.
.IP "\fB\-A\fR" 4
.IX Item "-A"
\(:Aquivalent zu \fB\-\-build=all\fR.
.IP "\fB\-S\fR" 4
.IX Item "-S"
\(:Aquivalent zu \fB\-\-build=source\fR.
.IP "\fB\-F\fR" 4
.IX Item "-F"
\(:Aquivalent zu \fB\-\-build=full\fR, \fB\-\-build=source,binary\fR oder
\&\fB\-\-build=source,any,all\fR (seit Dpkg 1.15.8).
.IP "\fB\-\-target=\fR\fIZiel\fR[,…]" 4
.IX Item "--target=Ziel[,…]"
.PD 0
.IP "\fB\-\-target\fR \fIZiel\fR[,…]" 4
.IX Item "--target Ziel[,…]"
.IP "\fB\-T\fR, \fB\-\-rules\-target=\fR\fIZiel\fR[,…]" 4
.IX Item "-T, --rules-target=Ziel[,…]"
.PD
Ruft \fBdebian/rules\fR \fIZiel\fR einmal pro angegebenem Ziel auf, nachdem die
Bauumgebung eingerichtet wurde (au\(sser dass \fBdpkg-source \-\-before\-build\fR
aufgerufen wird) und beendet den Paketbauprozess hier (seit Dpkg 1.15.0,
lange Optionen seit Dpkg 1.18.8, Unterst\(:utzung f\(:ur mehrere Ziele seit Dpkg
1.18.16). Falls auch \fB\-\-as\-root\fR angegeben wurde, wird der Befehl mit
root-Rechten ausgef\(:uhrt (siehe \fB\-\-root\-command\fR). Beachten Sie, dass
bekannte Ziele, die als Root ausgef\(:uhrt werden m\(:ussen, diese Option nicht
ben\(:otigen (d.h. die Ziele \fBclean\fR, \fBbinary\fR, \fBbinary-arch\fR und
\&\fBbinary-indep\fR).
.IP "\fB\-\-as\-root\fR" 4
.IX Item "--as-root"
Ergibt nur mit \fB\-\-target\fR einen Sinn (seit Dpkg 1.15.0). Erfordert, dass
das Ziel mit Root-Rechten ausgef\(:uhrt wird.
.IP "\fB\-si\fR" 4
.IX Item "-si"
.PD 0
.IP "\fB\-sa\fR" 4
.IX Item "-sa"
.IP "\fB\-sd\fR" 4
.IX Item "-sd"
.IP "\fB\-v\fR\fIVersion\fR" 4
.IX Item "-vVersion"
.IP "\fB\-C\fR\fI\(:Anderungsbeschreibung\fR" 4
.IX Item "-C\(:Anderungsbeschreibung"
.IP "\fB\-m\fR, \fB\-\-release\-by=\fR\fIBetreueradresse\fR" 4
.IX Item "-m, --release-by=Betreueradresse"
.IP "\fB\-e\fR, \fB\-\-build\-by=\fR\fIBetreueradresse\fR" 4
.IX Item "-e, --build-by=Betreueradresse"
.PD
Wird unver\(:andert an \fBdpkg-genchanges\fR weitergegeben. Lesen Sie dessen
Handbuchseite.
.IP "\fB\-a\fR, \fB\-\-host\-arch\fR \fIArchitektur\fR" 4
.IX Item "-a, --host-arch Architektur"
Spezifiziert die Debian-Architektur, f\(:ur die gebaut wird (lange Option seit
Dpkg 1.17.17). Die Architektur der Maschine, auf der gebaut wird, wird
automatisch bestimmt, und ist auch die Voreinstellung f\(:ur die Wirtmaschine
(\(Bqhost machine\(lq).
.IP "\fB\-t\fR, \fB\-\-host\-type\fR \fIGNU-Systemtyp\fR" 4
.IX Item "-t, --host-type GNU-Systemtyp"
Gibt den GNU-Systemtyp, f\(:ur den wir bauen, an (lange Option seit Dpkg
1.17.17). Er kann anstelle von \fB\-\-host\-arch\fR oder als Erg\(:anzung verwandt
werden, um den Standard-GNU-Systemtyp der Host-Debian-Architektur au\(sser
Kraft zu setzen.
.IP "\fB\-\-target\-arch\fR \fIArchitektur\fR" 4
.IX Item "--target-arch Architektur"
Gibt die Debian-Architektur, f\(:ur die die gebauten Programme bauen werden, an
(seit Dpkg 1.17.17). Die Voreinstellung ist die Host-Maschine.
.IP "\fB\-\-target\-type\fR \fIGNU-Systemtyp\fR" 4
.IX Item "--target-type GNU-Systemtyp"
Gibt den GNU-Systemtyp, f\(:ur den die gebauten Programme bauen werden, an
(seit Dpkg 1.17.17). Er kann anstelle von \fB\-\-target\-arch\fR oder als
Erg\(:anzung verwandt werden, um den Standard-GNU-Systemtyp der
Ziel-Debian-Architektur zu \(:uberschreiben.
.IP "\fB\-P\fR, \fB\-\-build\-profiles=\fR\fIProfil\fR[\fB,\fR…]" 4
.IX Item "-P, --build-profiles=Profil[,…]"
Gibt als Kommata-getrennte Liste die zu bauenden Profile an (seit Dpkg
1.17.2, lange Optionen seit Dpkg 1.18.8). Standardm\(:a\(ssig wird f\(:ur kein
bestimmtes Profil gebaut. Setzt sie auch (als durch Leerzeichen getrennte
Liste) in die Umgebungsvariable \fB\s-1DEB_BUILD_PROFILES\s0\fR. Dies erlaubt
beispielsweise \fBdebian/rules\fR\-Dateien, diese Information f\(:ur den Bau unter
bestimmten Bedingungen zu nutzen.
.IP "\fB\-j\fR, \fB\-\-jobs\fR[=\fIAuftr\(:age\fR|\fBauto\fR]" 4
.IX Item "-j, --jobs[=Auftr\(:age|auto]"
Anzahl an Auftr\(:agen, die simultan laufen d\(:urfen, Anzahl von Auftr\(:agen, die
zur Anzahl der verf\(:ugbaren Prozessoren passt, falls \fBauto\fR angegeben ist
(seit Dpkg 1.17.10) oder eine unbegrenzte Anzahl, falls \fIAuftr\(:age\fR nicht
angegeben ist, \(:aquivalent zu der Option von \fBmake\fR(1) mit dem gleichen
Namen (seit Dpkg 1.14.7, lange Option seit Dpkg 1.18.8). F\(:ugt sich selbst zu
der Umgebungsvariablen \fB\s-1MAKEFLAGS\s0\fR hinzu, was dazu f\(:uhren sollte, dass alle
folgenden Aufrufe von Make diese Option erben werden. Damit wird dem Paket
die Parallel-Einstellung aufgezwungen (und m\(:oglicherweise dem Bausystem der
Originalautoren, falls dieses Make verwendet), unabh\(:angig von deren
Unterst\(:utzung f\(:ur paralleles Bauen. Dies kann zu Fehlern beim Bauen
f\(:uhren. F\(:ugt auch \fBparallel=\fR\fIAuftr\(:age\fR oder \fBparallel\fR zu der
Umgebungsvariablen \fB\s-1DEB_BUILD_OPTIONS\s0\fR hinzu, was es debian/rules\-Dateien
erlaubt, diese Information f\(:ur eigene Zwecke zu verwenden. Der Wert \fB\-j\fR
setzt die Option \fBparallel=\fR\fIAuftr\(:age\fR oder die Option \fBparallel\fR in der
Umgebungsvariable \fB\s-1DEB_BUILD_OPTIONS\s0\fR au\(sser Kraft. Beachten Sie, dass der
Wert \fBauto\fR durch die tats\(:achliche Anzahl der derzeitig aktiven Prozessoren
ersetzt wird und somit nicht an irgendeinen Kindprozess weitergereicht
wird. Falls die Anzahl der verf\(:ugbaren Prozessoren nicht ermittelt werden
kann, f\(:allt der Code auf eine serielle Abarbeitung zur\(:uck (seit Dpkg
1.18.15). Dies sollte aber nur auf exotischen und nicht unterst\(:utzten
Systemen passieren.
.IP "\fB\-J\fR, \fB\-\-jobs\-try\fR[=\fIAuftr\(:age\fR|\fBauto\fR]" 4
.IX Item "-J, --jobs-try[=Auftr\(:age|auto]"
Diese Option (seit Dpkg 1.18.2, lange Option seit Dpkg 1.18.8) ist
\(:aquivalent zu der Option \fB\-j\fR, allerdings setzt sie die Umgebungsvariable
\&\fB\s-1MAKEFLAGS\s0\fR nicht und ist daher sicherer mit allen Paketen zu benutzen,
auch denen, die nicht sicher parallel bauen.
.Sp
\&\fBauto\fR ist das Standardverhalten (seit Dpkg 1.18.11). Durch Setzen der
Anzahl von Auftr\(:agen auf 1 wird das serielle Verhalten wiederhergestellt.
.IP "\fB\-D\fR, \fB\-\-check\-builddeps\fR" 4
.IX Item "-D, --check-builddeps"
Pr\(:uft Bauabh\(:angigkeiten und \-konflikte; Abbruch, falls diese nicht erf\(:ullt
sind (lange Option seit Dpkg 1.18.8). Dies ist das Standardverhalten.
.IP "\fB\-d\fR, \fB\-\-no\-check\-builddeps\fR" 4
.IX Item "-d, --no-check-builddeps"
\(:Uberpr\(:uft Bauabh\(:angigkeiten und \-konflikte nicht (lange Option seit Dpkg
1.18.8).
.IP "\fB\-\-ignore\-builtin\-builddeps\fR" 4
.IX Item "--ignore-builtin-builddeps"
Pr\(:uft die eingebauten Bauabh\(:angigkeiten und \-konflikte nicht (seit Dpkg
1.18.2). Es gibt distributionsabh\(:angige spezifische implizite
Abh\(:angigkeiten, die normalerweise in der Bauumgebung ben\(:otigt werden, die
sogenannte \(BqBuild\-Essential\(lq\-Paketgruppe.
.IP "\fB\-\-rules\-requires\-root\fR" 4
.IX Item "--rules-requires-root"
Ber\(:ucksichtigt das Feld \fBRules-Requires-Root\fR nicht, sondern f\(:allt auf den
alten Vorgabewert zur\(:uck (seit Dpkg 1.19.1).
.IP "\fB\-nc\fR, \fB\-\-no\-pre\-clean\fR" 4
.IX Item "-nc, --no-pre-clean"
Bereinigt den Quellbaum vor dem Bau nicht (lange Option seit Dpkg
1.18.8). Impliziert \fB\-b\fR, falls ansonsten nichts aus \fB\-F\fR, \fB\-g\fR, \fB\-G\fR,
\&\fB\-B\fR, \fB\-A\fR oder \fB\-S\fR gew\(:ahlt wurde. Impliziert \fB\-d\fR mit \fB\-S\fR (seit Dpkg
1.18.0).
.IP "\fB\-\-pre\-clean\fR" 4
.IX Item "--pre-clean"
Bereinigt den Quellbaum vor dem Bau (seit Dpkg 1.18.8). Dies ist das
Standardverhalten.
.IP "\fB\-tc\fR, \fB\-\-post\-clean\fR" 4
.IX Item "-tc, --post-clean"
Bereinigt den Quellbaum (verwendet \fIroot-werde-Befehl\fR \fBdebian/rules
clean\fR), nachdem das Paket gebaut wurde (lange Option seit Dpkg 1.18.8).
.IP "\fB\-\-no\-post\-clean\fR" 4
.IX Item "--no-post-clean"
Bereinigt den Quellbaum nicht, nachdem das Paket gebaut wurde (seit Dpkg
1.19.1). Dies ist das Standardverhalten.
.IP "\fB\-\-sanitize\-env\fR" 4
.IX Item "--sanitize-env"
Bereinigt die Bauumgebung (seit Dpkg 1.20.0). Dies setzt die
Umgebungsvariablen, die Umask und alle anderen Prozessattribute, die den Bau
von Paketen negativ beeinflussen k\(:onnten, zur\(:uck oder entfernt sie. Da der
offizielle Einstiegspunkt zum Bau von Paketen \fBdebian/rules\fR ist, k\(:onnen
sich Pakete nicht darauf verlassen, dass diese Einstellungen erfolgt sind,
und sollten daher funktionieren, selbst wenn dies nicht der Fall ist. Was
genau bereinigt wird, h\(:angt vom Lieferanten ab.
.IP "\fB\-r\fR, \fB\-\-root\-command=\fR\fIroot-werde-Befehl\fR" 4
.IX Item "-r, --root-command=root-werde-Befehl"
Wenn \fBdpkg-buildpackage\fR einen Teil des Bauprozesses als Root ausf\(:uhren
muss, stellt es dem auszuf\(:uhrenden Befehl den \fIroot-werde-Befehl\fR voran,
falls dieser angegeben wurde (lange Option seit Dpkg 1.18.8). Andernfalls
wird standardm\(:a\(ssig \fBfakeroot\fR verwendet, falls es vorhanden ist. Der
\&\fIroot-werde-Befehl\fR sollte der Name des Programmes im \fB\s-1PATH\s0\fR sein und wird
als Argumente den Namen des wirklich auszuf\(:uhrenden Befehles und dessen
Argumente erhalten. \fIroot-werde-Befehl\fR kann Parameter enthalten (die durch
Leerzeichen voneinander getrennt sein m\(:ussen), aber keine
Shell-Metazeichen. Typischerweise ist der \fIroot-werde-Befehl\fR \fBfakeroot\fR,
\&\fBsudo\fR, \fBsuper\fR oder \fBreally\fR. \fBsu\fR ist nicht geeignet, da es nur die
Shell des Benutzers mit \fB\-c\fR aufrufen kann, anstatt Argumente individuell
zur Ausf\(:uhrung des Programms zu \(:ubergeben.
.IP "\fB\-R\fR, \fB\-\-rules\-file=\fR\fIrules-Datei\fR" 4
.IX Item "-R, --rules-file=rules-Datei"
Der Bau eines Debian-Pakets erfolgt gew\(:ohnlich durch Aufruf von
\&\fBdebian/rules\fR als ein Befehl mit mehreren Standardparametern (seit Dpkg
1.14.17, lange Option seit Dpkg 1.18.8). Mit dieser Option ist es m\(:oglich,
einen anderen Programmaufruf zum Bau des Paketes zu verwenden (es k\(:onnen
durch Leerzeichen getrennte Parameter angegeben werden). Alternativ kann die
Standard-rules-Datei mit einem anderen Make-Programm ausgef\(:uhrt werden (zum
Beispiel durch die Verwendung von \fB/usr/local/bin/make \-f debian/rules\fR als
\&\fIrules-Datei\fR).
.IP "\fB\-\-check\-command=\fR\fIPr\(:ufbefehl\fR" 4
.IX Item "--check-command=Pr\(:ufbefehl"
Befehl, der zum Pr\(:ufen der \fB.changes\fR\-Datei selbst und s\(:amtlichen in der
Datei referenzierten Artefakten verwandt wird (seit Dpkg 1.17.6). Der Befehl
sollte den Pfadnamen der \fB.changes\fR als Argument erhalten. Dieser Befehl
ist normalerweise \fBlintian\fR.
.IP "\fB\-\-check\-option=\fR\fIOpt\fR" 4
.IX Item "--check-option=Opt"
Option \fIOpt\fR an den \fIPr\(:ufbefehl\fR, der mit \fB\s-1DEB_CHECK_COMMAND\s0\fR oder
\&\fB\-\-check\-command\fR angegeben wurde, \(:ubergeben (seit Dpkg 1.17.6). Kann
mehrfach verwandt werden.
.IP "\fB\-\-hook\-\fR\fIHook-Name\fR\fB=\fR\fIHook-Befehl\fR" 4
.IX Item "--hook-Hook-Name=Hook-Befehl"
Setzt den angegebenen Shell-Code \fIHook-Befehl\fR als den Hook \fIHook-Name\fR,
der an den Zeitpunkten l\(:auft, die in den Ablaufschritten angegeben sind
(seit Dpkg 1.17.6). Die Hooks werden immer ausgef\(:uhrt, selbst falls die
folgende Aktion nicht durchgef\(:uhrt wird (au\(sser beim Hook \fBbinary\fR). Alle
Hooks werden in dem entpackten Quellverzeichnis ausgef\(:uhrt.
.Sp
\&\fBHinweis\fR: Hooks k\(:onnen den Bauprozess beeinflussen und zu Baufehlern
f\(:uhren, falls ihre Befehle fehlschlagen, was unerwartete Folgen haben
k\(:onnte. Passen Sie daher auf.
.Sp
Die derzeit unterst\(:utzten \fIHook-Name\fRn sind:
.Sp
\&\fBinit preclean source build binary buildinfo changes postclean check sign
done\fR
.Sp
Der \fIHook-Befehl\fR unterst\(:utzt die folgende Ersetzungsformatzeichenkette,
die vor seiner Ausf\(:uhrung angewandt wird:
.RS 4
.IP "\fB%%\fR" 4
.IX Item "%%"
Ein einzelnes %\-Zeichen.
.IP "\fB\f(CB%a\fB\fR" 4
.IX Item "%a"
Ein logischer Wert (0 oder 1), der darstellt, ob die folgende Aktion
ausgef\(:uhrt wird oder nicht.
.IP "\fB\f(CB%p\fB\fR" 4
.IX Item "%p"
Der Quellpaketname.
.IP "\fB\f(CB%v\fB\fR" 4
.IX Item "%v"
Die Quellpaket-Version.
.IP "\fB\f(CB%s\fB\fR" 4
.IX Item "%s"
Die Quellpaket-Version (ohne die Epoche).
.IP "\fB\f(CB%u\fB\fR" 4
.IX Item "%u"
Die Original\- (Upstream\-)Version.
.RE
.RS 4
.RE
.IP "\fB\-\-buildinfo\-option=\fR\fIOpt\fR" 4
.IX Item "--buildinfo-option=Opt"
Option \fIOpt\fR an \fBdpkg-genbuildinfo\fR weitergeben (seit Dpkg 1.18.11). Kann
mehrfach verwandt werden.
.IP "\fB\-p\fR, \fB\-\-sign\-command=\fR\fISignaturbefehl\fR" 4
.IX Item "-p, --sign-command=Signaturbefehl"
Wenn \fBdpkg-buildpackage\fR \s-1GPG\s0 zum Signieren einer Quellsteuerdatei (\fB.dsc\fR)
oder einer \fB.changes\fR\-Datei ben\(:otigt, wird es statt \fBgpg\fR den
\&\fISignaturbefehl\fR ausf\(:uhren (und dabei falls notwendig den \fB\s-1PATH\s0\fR
durchsuchen) (lange Option seit Dpkg 1.18.8). \fISignaturbefehl\fR wird alle
Argumente erhalten, die \fBgpg\fR erhalten h\(:atte. \fISignaturbefehl\fR sollte
keine Leerzeichen oder andere Metazeichen der Shell enthalten.
.IP "\fB\-k\fR, \fB\-\-sign\-key=\fR\fISchl\(:usselkennung\fR" 4
.IX Item "-k, --sign-key=Schl\(:usselkennung"
Geben Sie die Schl\(:usselkennung zur Signatur von Paketen an (lange Option
seit Dpkg 1.18.8).
.IP "\fB\-us\fR, \fB\-\-unsigned\-source\fR" 4
.IX Item "-us, --unsigned-source"
Das Quellpaket nicht signieren (lange Option seit Dpkg 1.18.8).
.IP "\fB\-ui\fR, \fB\-\-unsigned\-buildinfo\fR" 4
.IX Item "-ui, --unsigned-buildinfo"
Die \fB.buildinfo\fR\-Datei nicht signieren (seit Dpkg 1.18.19).
.IP "\fB\-uc\fR, \fB\-\-unsigned\-changes\fR" 4
.IX Item "-uc, --unsigned-changes"
Die \fB.changes\fR\- und die \fB.buildinfo\fR Datei nicht signieren (lange Option
seit Dpkg 1.18.8).
.IP "\fB\-\-no\-sign\fR" 4
.IX Item "--no-sign"
Keine Datei signieren, das schlie\(sst Quellpakete, die Datei \fB.buildinfo\fR und
die Datei \fB.changes\fR ein (seit Dpkg 1.18.20).
.IP "\fB\-\-force\-sign\fR" 4
.IX Item "--force-sign"
Das Signieren der entstehenden Dateien erzwingen (seit Dpkg 1.17.0),
unabh\(:angig von \fB\-us\fR, \fB\-\-unsigned\-source\fR, \fB\-ui\fR,
\&\fB\-\-unsigned\-buildinfo\fR, \fB\-uc\fR, \fB\-\-unsigned\-changes\fR oder anderen internen
Heuristiken.
.IP "\fB\-sn\fR" 4
.IX Item "-sn"
.PD 0
.IP "\fB\-ss\fR" 4
.IX Item "-ss"
.IP "\fB\-sA\fR" 4
.IX Item "-sA"
.IP "\fB\-sk\fR" 4
.IX Item "-sk"
.IP "\fB\-su\fR" 4
.IX Item "-su"
.IP "\fB\-sr\fR" 4
.IX Item "-sr"
.IP "\fB\-sK\fR" 4
.IX Item "-sK"
.IP "\fB\-sU\fR" 4
.IX Item "-sU"
.IP "\fB\-sR\fR" 4
.IX Item "-sR"
.IP "\fB\-i\fR, \fB\-\-diff\-ignore\fR[=\fIregex\fR]" 4
.IX Item "-i, --diff-ignore[=regex]"
.IP "\fB\-I\fR, \fB\-\-tar\-ignore\fR[=\fIMuster\fR]" 4
.IX Item "-I, --tar-ignore[=Muster]"
.IP "\fB\-z\fR, \fB\-\-compression\-level=\fR\fIStufe\fR" 4
.IX Item "-z, --compression-level=Stufe"
.IP "\fB\-Z\fR, \fB\-\-compression=\fR\fIKomprimierer\fR" 4
.IX Item "-Z, --compression=Komprimierer"
.PD
Wird unver\(:andert an \fBdpkg-source\fR weitergegeben. Lesen Sie dessen
Handbuchseite.
.IP "\fB\-\-source\-option=\fR\fIOpt\fR" 4
.IX Item "--source-option=Opt"
Option \fIOpt\fR an \fBdpkg-source\fR weitergeben (seit Dpkg 1.15.6). Kann
mehrfach verwandt werden.
.IP "\fB\-\-changes\-option=\fR\fIOpt\fR" 4
.IX Item "--changes-option=Opt"
Option \fIOpt\fR an \fBdpkg-genchanges\fR weitergeben (seit Dpkg 1.15.6). Kann
mehrfach verwandt werden.
.IP "\fB\-\-admindir=\fR\fIVerz\fR" 4
.IX Item "--admindir=Verz"
.PD 0
.IP "\fB\-\-admindir\fR \fIVerz\fR" 4
.IX Item "--admindir Verz"
.PD
\(:Andert den Ablageort der \fBdpkg\fR\-Datenbank (seit Dpkg 1.14.0). Der
Standardort ist \fI\f(CI%ADMINDIR\fI%\fR.
.IP "\fB\-?\fR, \fB\-\-help\fR" 4
.IX Item "-?, --help"
Zeigt einen Hinweis zum Aufruf und beendet das Programm.
.IP "\fB\-\-version\fR" 4
.IX Item "--version"
Gibt die Version aus und beendet das Programm.
.SH "UMGEBUNG"
.IX Header "UMGEBUNG"
.SS "Externe Umgebung"
.IX Subsection "Externe Umgebung"
.IP "\fB\s-1DEB_CHECK_COMMAND\s0\fR" 4
.IX Item "DEB_CHECK_COMMAND"
Falls gesetzt, wird er zum Pr\(:ufen der \fB.changes\fR\-Datei verwandt (seit Dpkg
1.17.6). Wird durch die Option \fB\-\-check\-command\fR au\(sser Kraft gesetzt.
.IP "\fB\s-1DEB_SIGN_KEYID\s0\fR" 4
.IX Item "DEB_SIGN_KEYID"
Falls gesetzt, wird er zum Signieren der \fB.changes\fR\- und \fB.dsc\fR\-Dateien
verwandt (seit Dpkg 1.17.2). Wird durch die Option \fB\-\-sign\-key\fR au\(sser Kraft
gesetzt.
.IP "\fB\s-1DEB_BUILD_OPTIONS\s0\fR" 4
.IX Item "DEB_BUILD_OPTIONS"
Falls gesetzt, wird sie eine durch Leerraumzeichen getrennte Liste von
Optionen enthalten, die den Bauprozess in \fIdebian/rules\fR und das Verhalten
einiger Dpkg-Befehle beeinflussen k\(:onnten.
.Sp
Mit \fBnocheck\fR wird die Variable \fB\s-1DEB_CHECK_COMMAND\s0\fR ignoriert. Mit
\&\fBparallel=\fR\fIN\fR werden die parallelen Auftr\(:age auf \fIN\fR gesetzt, was durch
die Option \fB\-\-jobs\-try\fR au\(sser Kraft gesetzt wird.
.IP "\fB\s-1DEB_BUILD_PROFILES\s0\fR" 4
.IX Item "DEB_BUILD_PROFILES"
Falls gesetzt, wird es als aktive(s) Bau\-Profil(e) f\(:ur das zu bauende Paket
verwandt (seit Dpkg 1.17.2). Es ist eine durch Leerzeichen getrennte Liste
von Profilnamen. Wird durch die Option \fB\-P\fR au\(sser Kraft gesetzt.
.IP "\fB\s-1DPKG_COLORS\s0\fR" 4
.IX Item "DPKG_COLORS"
Setzt den Farbmodus (seit Dpkg 1.18.5). Die derzeit unterst\(:utzten Werte
sind: \fBauto\fR (Vorgabe), \fBalways\fR und \fBnever\fR.
.IP "\fB\s-1DPKG_NLS\s0\fR" 4
.IX Item "DPKG_NLS"
Falls dies gesetzt ist, wird es zur Entscheidung, ob Native Language
Support, auch als Unterst\(:utzung f\(:ur Internationalisierung (oder i18n)
bekannt, aktiviert wird (seit Dpkg 1.19.0). Die akzeptierten Werte sind:
\&\fB0\fR und \fB1\fR (Vorgabe).
.SS "Interne Umgebung"
.IX Subsection "Interne Umgebung"
Selbst falls \fBdpkg-buildpackage\fR einige Variablen exportiert, sollte
\&\fBdebian/rules\fR sich nicht auf ihr Vorhandensein verlassen, sondern
stattdessen die entsprechende Schnittstelle verwenden, um die ben\(:otigten
Werte abzufragen, da diese Datei der Haupteintrittspunkt f\(:ur den Bau von
Paketen ist und es m\(:oglich sein soll, sie unabh\(:angig aufrufen zu k\(:onnen.
.IP "\fBDEB_BUILD_*\fR" 4
.IX Item "DEB_BUILD_*"
.PD 0
.IP "\fBDEB_HOST_*\fR" 4
.IX Item "DEB_HOST_*"
.IP "\fBDEB_TARGET_*\fR" 4
.IX Item "DEB_TARGET_*"
.PD
Beim Aufruf von \fBdpkg-architecture\fR werden die Parameter von \fB\-a\fR und
\&\fB\-t\fR durchgereicht. Jede Variable, die von seiner Option \fB\-s\fR ausgegeben
wird, wird in die Bauumgebung integriert.
.IP "\fB\s-1DEB_RULES_REQUIRES_ROOT\s0\fR" 4
.IX Item "DEB_RULES_REQUIRES_ROOT"
Diese Variable wird auf den Wert, der aus dem Feld \fBRules-Requires-Root\fR
oder von der Befehlszeile erhalten wird, gesetzt. Wenn gesetzt, wird er ein
g\(:ultiger Wert f\(:ur das Feld \fBRules-Requires-Root\fR sein. Er wird dazu
verwandt, \fBdebian/rules\fR anzugeben, ob die Spezifikation
\&\fBrootless\-builds.txt\fR unterst\(:utzt wird.
.IP "\fB\s-1DEB_GAIN_ROOT_CMD\s0\fR" 4
.IX Item "DEB_GAIN_ROOT_CMD"
Diese Variable wird auf \fIroot-werde-Befehl\fR gesetzt, wenn das Feld
\&\fBRules-Requires-Root\fR auf einen von \fBno\fR und \fBbinary-targets\fR
verschiedenen Wert gesetzt wird.
.IP "\fB\s-1SOURCE_DATE_EPOCH\s0\fR" 4
.IX Item "SOURCE_DATE_EPOCH"
Diese Variable wird auf den Unix-Zeitstempel seit der Epoche des letzten
Eintrags in \fIdebian/changelog\fR gesetzt, falls sie noch nicht definiert ist.
.SH "DATEIEN"
.IX Header "DATEIEN"
.IP "\fI\f(CI%PKGCONFDIR\fI%/buildpackage.conf\fR" 4
.IX Item "/etc/dpkg/buildpackage.conf"
Systemweite Konfigurationsdatei
.IP "\fI\f(CI$XDG_CONFIG_HOME\fI/dpkg/buildpackage.conf\fR oder" 4
.IX Item "$XDG_CONFIG_HOME/dpkg/buildpackage.conf oder"
.PD 0
.IP "\fI\f(CI$HOME\fI/.config/dpkg/buildpackage.conf\fR" 4
.IX Item "$HOME/.config/dpkg/buildpackage.conf"
.PD
Benutzerkonfigurationsdatei
.SH "BEMERKUNGEN"
.IX Header "BEMERKUNGEN"
.SS "Kompilierschalter werden nicht mehr exportiert"
.IX Subsection "Kompilierschalter werden nicht mehr exportiert"
Zwischen Dpkg 1.14.17 and 1.16.1 exportierte \fBdpkg-buildpackage\fR
Kompilierschalter (\fB\s-1CFLAGS\s0\fR, \fB\s-1CXXFLAGS\s0\fR, \fB\s-1FFLAGS\s0\fR, \fB\s-1CPPFLAGS\s0\fR und
\&\fB\s-1LDFLAGS\s0\fR) mit Werten, die von \fBdpkg-buildflags\fR geliefert wurden. Dies
ist nicht mehr der Fall.
.SS "Standard Bauziele"
.IX Subsection "Standard Bauziele"
\&\fBdpkg-buildpackage\fR verwendet seit Dpkg 1.16.2 die Ziele \fBbuild-arch\fR und
\&\fBbuild-indep\fR. Diese Ziele sind daher verpflichtend. Um aber Baufehler bei
existierenden Paketen zu vermeiden und um den \(:Ubergang zu erleichtern, (und
seit Dpkg 1.18.8 falls das Quellpaket nicht sowohl architekturabh\(:angige wie
\&\-unabh\(:angige Bin\(:arpakete baut) wird es auf das Ziel \fBbuild\fR zur\(:uckfallen,
falls \fBmake \-f debian/rules \-qn\fR \fIBauziel\fR den R\(:uckgabewert 2 liefert.
.SH "FEHLER"
.IX Header "FEHLER"
Es sollte m\(:oglich sein, Leerzeichen und Metazeichen der Shell und
Anfangsargumente f\(:ur \fIroot-werde-Befehl\fR und \fISignaturbefehl\fR anzugeben.
.SH "SIEHE AUCH"
.IX Header "SIEHE AUCH"
\&\fBdpkg-source\fR(1), \fBdpkg-architecture\fR(1), \fBdpkg-buildflags\fR(1),
\&\fBdpkg-genbuildinfo\fR(1), \fBdpkg-genchanges\fR(1), \fBfakeroot\fR(1),
\&\fBlintian\fR(1), \fBgpg\fR(1).
.SH "\(:UBERSETZUNG"
.IX Header "\(:UBERSETZUNG"
Die deutsche \(:Ubersetzung wurde 2004, 2006\-2020 von Helge Kreutzmann
<debian@helgefjell.de>, 2007 von Florian Rehnisch <eixman@gmx.de> und
2008 von Sven Joachim <svenjoac@gmx.de>
angefertigt. Diese \(:Ubersetzung ist Freie Dokumentation; lesen Sie die
\&\s-1GNU\s0 General Public License Version 2 oder neuer f\(:ur die Kopierbedingungen.
Es gibt \s-1KEINE HAFTUNG.\s0
