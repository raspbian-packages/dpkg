.\" Automatically generated by Pod::Man 4.11 (Pod::Simple 3.35)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "deb 5"
.TH deb 5 "2020-08-02" "1.20.5" "dpkg suite"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "BEZEICHNUNG"
.IX Header "BEZEICHNUNG"
deb \- Debian\-Bin\(:arpaketformat
.SH "\(:UBERSICHT"
.IX Header "\(:UBERSICHT"
\&\fIDateiname\fR\fB.deb\fR
.SH "BESCHREIBUNG"
.IX Header "BESCHREIBUNG"
Das \fB.deb\fR\-Format ist das Debian\-Bin\(:arpaketdateiformat. Es wird seit Dpkg
0.93.76 verstanden, und wird standardm\(:a\(ssig seit Dpkg1.2.0 und 1.1.1elf
(i386/ELF\-Versionen) erzeugt.
.PP
Das hier beschriebene Format wird seit Debian 0.93 verwendet; Details \(:uber
das alte Format sind in \fBdeb-old\fR(5) beschrieben.
.SH "FORMAT"
.IX Header "FORMAT"
Die Datei ist ein \fBar\fR\-Archiv mit dem magischen Wert
\&\fB!<arch>\fR. Nur das allgemeine \fBar\fR\-Archivformat wird unterst\(:utzt,
ohne Unterst\(:utzung von Dateinamenerweiterungen, aber mit Dateinamen, die
einen optionalen abschlie\(ssenden Schr\(:agstrich enthalten d\(:urfen, deren L\(:ange
damit auf 15 Zeichen (von den erlaubten 16) begrenzt ist. Dateigr\(:o\(ssen sind
auf 10 dezimale ASCII-Ziffern begrenzt, wodurch bis zu ungef\(:ahr 9536,74 MiB
Dateien in einem solchen Archiv erlaubt sind.
.PP
Derzeit werden die folgenden \fBtar\fR\-Archive erlaubt: alter Stil (V7\-)Format,
pr\(:a\-POSIX\-ustar\-Format, eine Teilmenge des GNU-Formats (der neue Stil mit
langen Pfadnamen und langen Linknamen, unterst\(:utzt seit Dpkg 1.4.1.17; gro\(sse
Datei-Metadaten seit Dpkg 1.18.24) und das POSIX-ustar-Format (lange Namen
seit Dpkg 1.15.0 unterst\(:utzt). Unbekannte Tar-Typeinstellungen werden als
Fehler betrachtet. Jede Tar\-Eintraggr\(:o\(sse innerhalb eines Tar-Archivs ist auf
11 ASCII-Oktalziffern begrenzt; damit sind bis zu 8 GiB\-Tar\-Eintr\(:age
m\(:oglich. Die Unterst\(:utzung der gro\(ssen Dateimetadaten im GNU-Format
erm\(:oglicht 95\-Bit\-Tar\-Eintragsgr\(:o\(ssen und negative Zeitstempel und
63\-Bit\-UID, \-GID und \-Ger\(:atenummern.
.PP
Das erste Element hei\(sst \fBdebian-binary\fR und enth\(:alt eine Reihe von Zeilen,
die durch Zeilenumbr\(:uche getrennt sind. Derzeit ist nur eine Zeile
vorhanden, die Versionsnummer, \fB2.0\fR zum Zeitpunkt, zu dem diese
Handbuchseite geschrieben wurde. Programme, die Archive im neuen Format
lesen, sollten darauf vorbereitet sein, dass sich die Nachkommazahl erh\(:oht
und neue Zeilen vorhanden sein k\(:onnen, und sollten diese ignorieren, falls
dies der Fall ist.
.PP
Falls sich die Vorkommazahl ge\(:andert hat, wurde eine inkompatible \(:Anderung
durchgef\(:uhrt und das Programm sollte sich beenden. Falls dies nicht der Fall
ist, dann sollte das Programm sicher fortfahren k\(:onnen, es sei denn, ein
unerwartetes Element ist im Archiv (abgesehen vom Ende) gefunden worden, wie
nachfolgend beschrieben.
.PP
Das zweite erforderliche Element hei\(sst \fBcontrol.tar\fR. Es ist ein Tar-Archiv
(entweder nicht komprimiert (wird seit Dpkg 1.17.6 unterst\(:utzt) oder mit
Gzip (mit der Endung \fB.gz\fR) bzw. Xz (mit der Endung \fB.xz\fR, seit Dpkg
1.17.6 unterst\(:utzt) komprimiert), das die Steuerinformationen als eine Reihe
von normalen Dateien enth\(:alt, von denen die Datei \fBcontrol\fR zwingend
erforderlich ist und die Kern-Steuerinformationen enth\(:alt. Die Dateien
\&\fBconffiles\fR, \fBtriggers\fR, \fBshlibs\fR und \fBsymbols\fR enthalten bestimmte
optionale Steuerinformationen und die Dateien \fBpreinst\fR, \fBpostinst\fR,
\&\fBprerm\fR und \fBpostrm\fR sind optionale Betreuerskripte. Der Steuer-Tarball
kann optional einen Eintrag f\(:ur \(bq\fB.\fR\(cq, das aktuelle Verzeichnis, enthalten.
.PP
Das dritte, letzte zwingend ben\(:otigte Element hei\(sst \fBdata.tar\fR. Es enth\(:alt
das Dateisystem als Tar-Archiv, entweder unkomprimiert (seit Dpkg 1.10.24
unterst\(:utzt) oder mit gzip (Dateiendung \fB.gz\fR), xz (Dateiendung \fB.xz\fR seit
Dpkg 1.15.6 unterst\(:utzt),bzip2 (Dateiendung \fB.bz2\fR, seit Dpkg 1.10.24
unterst\(:utzt) oder lzma (Dateiendung \fB.lzma\fR, seit Dpkg 1.13.25 unterst\(:utzt)
komprimiert.
.PP
Diese Elemente m\(:ussen in genau dieser Reihenfolge erscheinen. Aktuelle
Implementierungen sollten zus\(:atzliche Elemente nach \fBdata.tar\fR
ignorieren. Weitere Elemente k\(:onnten in der Zukunft definiert werden und
werden (falls m\(:oglich) nach diesen drei platziert. Alle zus\(:atzlichen
Elemente, die nach \fBdebian-binary\fR und vor \fBcontrol.tar\fR oder \fBdata.tar\fR
eingef\(:ugt werden k\(:onnten und die problemlos von \(:alteren Programmen ignoriert
werden sollten, werden Namen haben, die mit einem Unterstrich \(bq\fB_\fR\(cq
anfangen.
.PP
Solche neuen Elemente, die nicht problemlos ignoriert werden k\(:onnen, werden
vor \fBdata.tar\fR mit Namen, die nicht mit einem Unterstrich anfangen,
eingef\(:ugt oder werden (wahrscheinlicher) dazu f\(:uhren, dass die
Hauptversionsnummer erh\(:oht wird.
.SH "MEDIENTYP"
.IX Header "MEDIENTYP"
.SS "Aktuell"
.IX Subsection "Aktuell"
application/vnd.debian.binary\-package
.SS "Veraltet"
.IX Subsection "Veraltet"
application/x\-debian\-package
.PP
application/x\-deb
.SH "SIEHE AUCH"
.IX Header "SIEHE AUCH"
\&\fBdeb-old\fR(5), \fBdpkg-deb\fR(1), \fBdeb-control\fR(5), \fBdeb-conffiles\fR(5),
\&\fBdeb-triggers\fR(5), \fBdeb-shlibs\fR(5), \fBdeb-symbols\fR(5), \fBdeb-preinst\fR(5),
\&\fBdeb-postinst\fR(5), \fBdeb-prerm\fR(5), \fBdeb-postrm\fR(5).
.SH "\(:UBERSETZUNG"
.IX Header "\(:UBERSETZUNG"
Die deutsche \(:Ubersetzung wurde 2004, 2006\-2020 von Helge Kreutzmann
<debian@helgefjell.de>, 2007 von Florian Rehnisch <eixman@gmx.de> und
2008 von Sven Joachim <svenjoac@gmx.de>
angefertigt. Diese \(:Ubersetzung ist Freie Dokumentation; lesen Sie die
\&\s-1GNU\s0 General Public License Version 2 oder neuer f\(:ur die Kopierbedingungen.
Es gibt \s-1KEINE HAFTUNG.\s0
