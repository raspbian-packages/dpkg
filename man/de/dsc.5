.\" Automatically generated by Pod::Man 4.11 (Pod::Simple 3.35)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "dsc 5"
.TH dsc 5 "2020-08-02" "1.20.5" "dpkg suite"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "BEZEICHNUNG"
.IX Header "BEZEICHNUNG"
dsc \- Format der Quellpaketsteuerdatei von Debian
.SH "\(:UBERSICHT"
.IX Header "\(:UBERSICHT"
\&\fIDateiname\fR\fB.dsc\fR
.SH "BESCHREIBUNG"
.IX Header "BESCHREIBUNG"
Jedes Debian-Quellpaket besteht aus einer .dsc\-Steuerdatei, die eine Reihe
von Feldern enth\(:alt. Jedes Feld beginnt mit einer Markierung, wie \fBSource\fR
oder \fBBinary\fR (Gro\(ss\-/Kleinschreibung egal), gefolgt von einem Doppelpunkt
und dem K\(:orper des Feldes. Felder werden nur durch die Feldmarkierungen
abgegrenzt. Mit anderen Worten, Feldtexte k\(:onnen mehrere Zeilen \(:uberspannen,
aber die Installationswerkzeuge werden im Allgemeinen die Zeilen bei der
Verarbeitung des Feldk\(:orpers zusammenfassen (mit Ausnahme der mehrzeiligen
Felder \fBPackage-List\fR, \fBFiles\fR, \fBChecksums\-Sha1\fR und \fBChecksums\-Sha256\fR,
sehen Sie dazu unten).
.PP
Die Steuerdaten k\(:onnen in eine Signatur mit einer wie in \s-1RFC4880\s0
spezifizierten OpenPGP\-ASCII\-H\(:ulle eingeschlossen sein.
.SH "FELDER"
.IX Header "FELDER"
.IP "\fBFormat:\fR \fIFormatversion\fR (verpflichtend)" 4
.IX Item "Format: Formatversion (verpflichtend)"
Der Wert des Feldes gibt die Formatversion des Quellpaketes an. Der Feldwert
wird von Programmen, die mit Quellpaketen arbeiten, verwandt, um die Liste
der Dateien in dem Quellpaket zu interpretieren und zu bestimmen, wie es
entpackt wird. Die Syntax des Feldwertes ist eine numerische Hauptrevision
(\(Bq0\-9\(lq), ein Satzpunkt (\(Bq.\(lq), eine numerische Unterrevision (\(Bq0\-9\(lq) und dann
ein optionaler Untertyp nach Leerraum (\(Bq \et\(lq). Falls dieser angegeben wird,
ist er ein klein geschriebenes alphanumerisches (\(Bqa\-z0\-9\(lq) Wort in Klammern
(\(Bq()\(lq). Der Untertyp ist in der Syntax optional, kann aber f\(:ur eine
bestimmte Quellformatrevision verpflichtend sein.
.Sp
Die von \fBdpkg\fR derzeit unterst\(:utzten Quellformate sind \fB1.0\fR, \fB2.0\fR,
\&\fB3.0 (native)\fR, \fB3.0 (quilt)\fR, \fB3.0 (git)\fR, \fB3.0 (bzr)\fR und \fB3.0
(custom)\fR. Siehe \fBdpkg-source\fR(1) f\(:ur ihre Beschreibung.
.IP "\fBSource:\fR \fIQuellname\fR (verpflichtend)" 4
.IX Item "Source: Quellname (verpflichtend)"
Der Wert dieses Feldes bestimmt den Paketnamen und wird von den meisten
Installationswerkzeugen verwendet, um Dateinamen zu erstellen.
.IP "\fBBinary:\fR \fIBin\(:ar\-Paketliste\fR" 4
.IX Item "Binary: Bin\(:ar-Paketliste"
Dieses gefaltete Feld f\(:uhrt durch Kommata getrennte Bin\(:arpakete auf, die
dieses Quellpaket erstellen kann.
.Sp
Dieses Feld wurde jetzt durch das Feld \fBPackage-List\fR ersetzt, das genug
Informationen dar\(:uber gibt, welche bin\(:aren Pakete auf welcher Architektur
erstellt werden sowie Bauprofile und andere zugeh\(:orige Einschr\(:ankungen.
.IP "\fBArchitecture:\fR \fIArchitekturliste\fR (empfohlen)" 4
.IX Item "Architecture: Architekturliste (empfohlen)"
Eine durch Leerzeichen getrennte Liste von Architekturen und
Architekturplatzhaltern, die den Typ der Hardware festlegen, f\(:ur die das
Paket \(:ubersetzt werden kann. Typische Architekturnamen und
Architekturplatzhalter sind \fBamd64\fR, \fBarmel\fR, \fBi386\fR, \fBlinux-any\fR,
\&\fBany\-amd64\fR usw.
.Sp
Beachten Sie, dass der Wert \fBall\fR f\(:ur Pakete gedacht ist, die unabh\(:angig
von der Architektur sind und \fBany\fR f\(:ur Pakete, die architekturabh\(:angig
sind. Die Liste kann den Wert \fBall\fR enthalten oder aus ihm alleine
bestehen. Wenn die Liste den Architekturplatzhalter \fBany\fR enth\(:alt, ist der
einzig andere in der Liste erlaubte Wert \fBall\fR.
.Sp
Der Feldwert wird im Allgemeinen aus den \fBArchitecture\fR\-Feldern aus der
\&\fIdebian/control\fR des Quellpaketes erstellt.
.IP "\fBVersion:\fR \fIVersionszeichenkette\fR (verpflichtend)" 4
.IX Item "Version: Versionszeichenkette (verpflichtend)"
Typischerweise ist das die Original-Paketversionsnummer, in der Form, die
der Programmautor verwendet. Es kann auch eine Debian-Revisionsnummer
enthalten (f\(:ur nicht aus Debian stammende Pakete). Das genaue Format und der
Sortieralgorithmus sind in \fBdeb-version\fR(7) beschrieben.
.IP "\fBOrigin:\fR \fIName\fR" 4
.IX Item "Origin: Name"
Der Name der Distribution, aus der dieses Paket urspr\(:unglich stammt.
.IP "\fBMaintainer:\fR \fIVollst\(:andiger\-Name\-und\-E\-Mail\fR (empfohlen)" 4
.IX Item "Maintainer: Vollst\(:andiger-Name-und-E-Mail (empfohlen)"
Sollte in dem Format \(BqJoe Bloggs <jbloggs@foo.com>\(lq sein und ist
typischerweise die Person, die das Paket erstellt hat, im Gegensatz zum
Autor der Software, die paketiert wurde.
.IP "\fBUploaders:\fR \fIVollst\(:andiger\-Name\-und\-E\-Mail\-Liste\fR" 4
.IX Item "Uploaders: Vollst\(:andiger-Name-und-E-Mail-Liste"
Listet die Namen und E\-Mail-Adressen der Ko-Betreuer des Pakets auf, im
gleichen Format wie das Feld \fBMaintainer\fR. Mehrere Ko-Betreuer sollten
durch Kommata getrennt werden.
.IP "\fBDescription\fR \fIKurzbeschreibung\fR" 4
.IX Item "Description Kurzbeschreibung"
.PD 0
.IP "\fB\fR \fILangbeschreibung\fR" 4
.IX Item " Langbeschreibung"
.PD
Das Format der Quellpaketbeschreibung ist eine kurze knappe Zusammenfassung
auf der ersten Zeile (nach dem Feld \fBDescription\fR). Die folgenden Zeilen
sollten als l\(:angere, detailliertere Beschreibung verwendet werden. Jede
Zeile der Langbeschreibung muss von einem Leerzeichen begonnen werden, und
Leerzeilen in der Langbeschreibung m\(:ussen einen einzelnen \(bq\fB.\fR\(cq hinter dem
einleitenden Leerzeichen enthalten.
.IP "\fBHomepage:\fR \fI\s-1URL\s0\fR" 4
.IX Item "Homepage: URL"
Die \fI\s-1URL\s0\fR des Original\- (Upstream\-)Projekts.
.IP "\fBStandards-Version:\fR  \fIVersionszeichenkette\fR (empfohlen)" 4
.IX Item "Standards-Version: Versionszeichenkette (empfohlen)"
Dies dokumentiert die neuste Version der Standards der Distribution, an die
sich das Paket h\(:alt.
.IP "\fBVcs-Browser:\fR \fI\s-1URL\s0\fR" 4
.IX Item "Vcs-Browser: URL"
Die \fI\s-1URL\s0\fR der Webschnittstelle, um das Versionskontrollsystem-Depot
anzuschauen.
.IP "\fBVcs\-Arch*:\fR \fI\s-1URL\s0\fR" 4
.IX Item "Vcs-Arch*: URL"
.PD 0
.IP "\fBVcs-Bzr:\fR \fI\s-1URL\s0\fR" 4
.IX Item "Vcs-Bzr: URL"
.IP "\fBVcs-Cvs:\fR \fI\s-1URL\s0\fR" 4
.IX Item "Vcs-Cvs: URL"
.IP "\fBVcs-Darcs:\fR \fI\s-1URL\s0\fR" 4
.IX Item "Vcs-Darcs: URL"
.IP "\fBVcs-Git:\fR \fI\s-1URL\s0\fR" 4
.IX Item "Vcs-Git: URL"
.IP "\fBVcs-Hg:\fR \fI\s-1URL\s0\fR" 4
.IX Item "Vcs-Hg: URL"
.IP "\fBVcs-Mtn:\fR \fI\s-1URL\s0\fR" 4
.IX Item "Vcs-Mtn: URL"
.IP "\fBVcs-Svn:\fR \fI\s-1URL\s0\fR" 4
.IX Item "Vcs-Svn: URL"
.PD
Diese Felder geben die \fI\s-1URL\s0\fR des Versionskontrollsystem-Depots, das f\(:ur die
Betreuung des Pakets verwandt wird, an. Siehe \fBdeb-src-control\fR(5) f\(:ur
weitere Details.
.IP "\fBTestsuite:\fR \fINamenliste\fR" 4
.IX Item "Testsuite: Namenliste"
Dieses Feld gibt an, dass das Quellpaket die angegebene Testsammlung
enth\(:alt. Der Wert ist eine durch Kommata getrennte Liste von
Testsammlungen. Falls der Wert \fBautopkgtest\fR vorkommt, wird erwartet, dass
\&\fIdebian/tests/control\fR vorhanden ist. Falls nur die Datei, aber nicht der
Wert vorhanden ist, wird \fBdpkg-source\fR den Wert automatisch (unter
Beibehaltung der vorherigen Werte) hinzuf\(:ugen.
.IP "\fBTestsuite-Triggers:\fR \fIPaketliste\fR" 4
.IX Item "Testsuite-Triggers: Paketliste"
Dieses Feld gibt die Vereinigung aller Testabh\(:angigkeiten (Felder \fBDepends\fR
in der Datei \fIdebian/tests/control\fR) an, wobei alle Einschr\(:ankungen
entfernt und ODER\-Abh\(:angigkeiten verflacht (d.h. in separate UND-Beziehungen
umgewandelt) sind. Das betrifft keine Programme, die vom Quellpaket und
dessen Meta\-Abh\(:angigkeiten wie \fB@\fR oder \fB\f(CB@builddeps\fB@\fR erstellt wurden.
.Sp
Hintergrund: Dieses Feld wird ben\(:otigt, da andernfalls jedes Quellpaket
entpackt werden m\(:usste, um die Testabh\(:angigkeiten zu ermitteln.
.IP "\fBBuild-Depends:\fR \fIPaketliste\fR" 4
.IX Item "Build-Depends: Paketliste"
.PD 0
.IP "\fBBuild-Depends-Arch:\fR \fIPaketliste\fR" 4
.IX Item "Build-Depends-Arch: Paketliste"
.IP "\fBBuild-Depends-Indep:\fR \fIPaketliste\fR" 4
.IX Item "Build-Depends-Indep: Paketliste"
.IP "\fBBuild-Conflicts:\fR \fIPaketliste\fR" 4
.IX Item "Build-Conflicts: Paketliste"
.IP "\fBBuild-Conflicts-Arch:\fR \fIPaketliste\fR" 4
.IX Item "Build-Conflicts-Arch: Paketliste"
.IP "\fBBuild-Conflicts-Indep:\fR \fIPaketliste\fR" 4
.IX Item "Build-Conflicts-Indep: Paketliste"
.PD
Diese Felder geben die Beziehungen zwischen dem Quellpaket und Paketen, die
daraus gebaut werden, an. Sie werden in der Handbuchseite \fBdeb-control\fR(5)
beschrieben.
.IP "\fBPackage-List:\fR" 4
.IX Item "Package-List:"
.PD 0
.IP " \fIPaket\fR \fIPakettyp\fR \fISektion\fR \fIPriorit\(:at\fR \fISchl\(:ussel\-Wert\-Liste\fR" 4
.IX Item " Paket Pakettyp Sektion Priorit\(:at Schl\(:ussel-Wert-Liste"
.PD
Dieses mehrzeilige Feld enth\(:alt eine Liste von Bin\(:arpaketen, die von diesem
Quellpaket erstellt werden.
.Sp
Das \fIPaket\fR ist der Name des Bin\(:arpakets.
.Sp
Der \fIPakettyp\fR ist der bin\(:are Pakettyp, normalerweise \fBdeb\fR, \fBudeb\fR ist
ein anderer h\(:aufig vorkommender Wert.
.Sp
\&\fISektion\fR und \fIPriorit\(:at\fR entsprechen den Feldern \fIsection\fR und
\&\fIpriority\fR des Bin\(:arpakets.
.Sp
Die \fISchl\(:ussel\-Wert\-Liste\fR ist eine durch Leerzeichen getrennte
\&\fISchl\(:ussel\fR\fB=\fR\fIWert\fR\-Liste und die derzeit erkannten optionalen Schl\(:ussel
sind:
.RS 4
.IP "\fBarch\fR" 4
.IX Item "arch"
Die Architektureinschr\(:ankungen aus dem Feld \fBArchitecture\fR des Bin\(:arpakets,
wobei Leerzeichen zu \(bq,\(cq konvertiert wurden.
.IP "\fBprofile\fR" 4
.IX Item "profile"
Die normalisierte Bauprofileinschr\(:ankungsformel aus dem Feld
\&\fBBuild-Profile\fR des Bin\(:arpakets, wobei \(BqOR\(lq in \(bq+\(cq und \(BqAND\(lq in \(bq,\(cq
umgewandelt wurden.
.IP "\fBprotected\fR" 4
.IX Item "protected"
Falls das Bin\(:arpaket \(Bqprotected\(lq ist, wird der Schl\(:ussel den Wert des Feldes
\&\fBProtected\fR enthalten, der \fByes\fR lautet.
.IP "\fBessential\fR" 4
.IX Item "essential"
Falls das Bin\(:arpaket \(Bqessential\(lq ist, wird der Schl\(:ussel den Wert des Feldes
\&\fBEssential\fR enthalten, der \fByes\fR lautet.
.RE
.RS 4
.RE
.IP "\fBFiles:\fR (verpflichtend)" 4
.IX Item "Files: (verpflichtend)"
.PD 0
.IP "\fBChecksums\-Sha1:\fR (verpflichtend)" 4
.IX Item "Checksums-Sha1: (verpflichtend)"
.IP "\fBChecksums\-Sha256:\fR (verpflichtend)" 4
.IX Item "Checksums-Sha256: (verpflichtend)"
.IP " \fIPr\(:ufsumme\fR \fIGr\(:o\(sse\fR \fIDateiname\fR" 4
.IX Item " Pr\(:ufsumme Gr\(:o\(sse Dateiname"
.PD
Diese mehrzeiligen Felder enthalten eine Liste von Dateien mit einer
Pr\(:ufsumme und Gr\(:o\(sse f\(:ur jede. Diese Felder haben die gleiche Syntax und
unterscheiden sich nur im verwandten Pr\(:ufsummenalgorithmus: \s-1MD5\s0 f\(:ur
\&\fBFiles\fR, \s-1SHA\-1\s0 f\(:ur \fBChecksums\-Sha1\fR und \s-1SHA\-256\s0 f\(:ur \fBChecksums\-Sha256\fR.
.Sp
Die erste Zeile des Feldwertes (der Teil auf dem durch einen Doppelpunkt
gefolgten Feldnamen) ist immer leer. Der Inhalt des Feldes wird durch
Fortsetzungszeilen ausgedr\(:uckt, eine Zeile pro Datei. Jede Zeile besteht aus
der Pr\(:ufsumme, einem Leerzeichen, der Dateigr\(:o\(sse, einem Leerzeichen und dem
Dateinamen.
.Sp
Diese Felder f\(:uhren alle Dateien auf, die das Quellpaket darstellen. Die
Liste der Dateien in diesen Feldern muss auf die Liste der Dateien in den
anderen dazugeh\(:origen Feldern passen.
.SH "FEHLER"
.IX Header "FEHLER"
Das Feld \fBFormat\fR f\(:ugt das Format f\(:ur die Datei \fB.dsc\fR und das Format des
entpackten Quellpakets zusammen.
.SH "SIEHE AUCH"
.IX Header "SIEHE AUCH"
\&\fBdeb-src-control\fR(5), \fBdeb-version\fR(7), \fBdpkg-source\fR(1).
.SH "\(:UBERSETZUNG"
.IX Header "\(:UBERSETZUNG"
Die deutsche \(:Ubersetzung wurde 2004, 2006\-2020 von Helge Kreutzmann
<debian@helgefjell.de>, 2007 von Florian Rehnisch <eixman@gmx.de> und
2008 von Sven Joachim <svenjoac@gmx.de>
angefertigt. Diese \(:Ubersetzung ist Freie Dokumentation; lesen Sie die
\&\s-1GNU\s0 General Public License Version 2 oder neuer f\(:ur die Kopierbedingungen.
Es gibt \s-1KEINE HAFTUNG.\s0
