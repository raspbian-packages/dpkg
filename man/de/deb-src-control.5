.\" Automatically generated by Pod::Man 4.11 (Pod::Simple 3.35)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "deb-src-control 5"
.TH deb-src-control 5 "2020-08-02" "1.20.5" "dpkg suite"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "BEZEICHNUNG"
.IX Header "BEZEICHNUNG"
deb-src-control \- Dateiformat der Hauptsteuerdatei von Debian-Quellpaketen
.SH "\(:UBERSICHT"
.IX Header "\(:UBERSICHT"
\&\fBdebian/control\fR
.SH "BESCHREIBUNG"
.IX Header "BESCHREIBUNG"
Jedes Debian-Quellpaket enth\(:alt eine Hauptdatei \(Bq\fBdebian/control\fR\(lq. Deren
Format ist eine Obermenge der in Debian\-Bin\(:arpaketen ausgelieferten
\&\fBcontrol\fR\-Datei, siehe \fBdeb-control\fR(5).
.PP
Diese Datei enth\(:alt mindestens zwei Abs\(:atze, die durch eine Leerzeile
getrennt werden. Der erste Absatz f\(:uhrt alle allgemeinen Informationen \(:uber
das Quellpaket auf, w\(:ahrend jeder folgende Absatz genau ein Bin\(:arpaket
beschreibt. Jeder Absatz besteht aus mindestens einem Feld. Ein Feld beginnt
mit einem Feldnamen, wie \fBPackage\fR oder \fBSection\fR (Gro\(ss\-/Kleinschreibung
egal), gefolgt von einem Doppelpunkt, dem Inhalt des Feldes und einem
Zeilenumbruch. Mehrzeilige Felder sind auch erlaubt, aber jede erg\(:anzende
Zeile ohne Feldnamen sollte mit mindestens einem Leerzeichen beginnen. Der
Inhalt des mehrzeiligen Feldes wird durch die Werkzeuge im Allgemeinen zu
einer Zeile zusammengef\(:uhrt (das Feld \fBDescription\fR ist eine Ausnahme,
siehe unten). Um Leerzeilen in ein mehrzeiliges Feld einzuf\(:ugen, verwenden
Sie einen Satzpunkt nach dem Leerzeichen. Zeilen, die mit \(bq\fB#\fR\(cq beginnen,
werden als Kommentare betrachtet.
.SH "QUELLPAKET-FELDER"
.IX Header "QUELLPAKET-FELDER"
.IP "\fBSource:\fR \fIQuellpaketname\fR (verpflichtend)" 4
.IX Item "Source: Quellpaketname (verpflichtend)"
Der Wert dieses Feldes ist der Name des Quellpakets und sollte mit dem Namen
des Quellpakets in der Datei \fIdebian/changelog\fR \(:ubereinstimmen. Ein
Paketname darf nur aus Kleinbuchstaben (a\-z), Ziffern (0\-9), Plus\- (+) und
Minuszeichen (\-) und Satzpunkten (.) bestehen. Paketnamen m\(:ussen mindestens
zwei Zeichen lang sein und mit einem klein geschriebenen alphanumerischen
Zeichen (a\-z0\-9) beginnen.
.IP "\fBMaintainer:\fR \fIVollst\(:andiger\-Name\-und\-E\-Mail\fR (empfohlen)" 4
.IX Item "Maintainer: Vollst\(:andiger-Name-und-E-Mail (empfohlen)"
Sollte in dem Format \(BqJoe Bloggs <jbloggs@foo.com>\(lq sein und
verweist auf die Person, die derzeit das Paket betreut, im Gegensatz zum
Autor der Software, die paketiert wurde, oder dem urspr\(:unglichen Paketierer.
.IP "\fBUploaders:\fR \fIVollst\(:andiger\-Name\-und\-E\-Mail\fR" 4
.IX Item "Uploaders: Vollst\(:andiger-Name-und-E-Mail"
Listet die Namen und E\-Mail-Adressen der Ko-Betreuer des Pakets auf, im
gleichen Format wie das Feld \fBMaintainer\fR. Mehrere Ko-Betreuer sollten
durch Kommata getrennt werden.
.IP "\fBStandards-Version:\fR  \fIVersionszeichenkette\fR" 4
.IX Item "Standards-Version: Versionszeichenkette"
Dies dokumentiert die neuste Version der Standards der Distribution, an die
sich das Paket h\(:alt.
.IP "\fBDescription\fR \fIKurzbeschreibung\fR" 4
.IX Item "Description Kurzbeschreibung"
.PD 0
.IP "\fB\fR \fILangbeschreibung\fR" 4
.IX Item " Langbeschreibung"
.PD
Das Format der Quellpaketbeschreibung ist eine kurze knappe Zusammenfassung
auf der ersten Zeile (nach dem Feld \fBDescription\fR). Die folgenden Zeilen
sollten als l\(:angere, detailliertere Beschreibung verwendet werden. Jede
Zeile der Langbeschreibung muss von einem Leerzeichen begonnen werden, und
Leerzeilen in der Langbeschreibung m\(:ussen einen einzelnen \(bq\fB.\fR\(cq hinter dem
einleitenden Leerzeichen enthalten.
.IP "\fBHomepage:\fR \fI\s-1URL\s0\fR" 4
.IX Item "Homepage: URL"
Die \s-1URL\s0 des Original\- (Upstream\-)Projekts.
.IP "\fBBugs:\fR \fI\s-1URL\s0\fR" 4
.IX Item "Bugs: URL"
Die \fI\s-1URL\s0\fR der Fehlerdatenbank f\(:ur dieses Paket. Das derzeit verwendete
Format ist \fIBTS-Art\fR\fB://\fR\fIBTS-Adresse\fR wie in
\&\fBdebbugs://bugs.debian.org\fR. Dieses Feld wird normalerweise nicht ben\(:otigt.
.IP "\fBRules-Requires-Root:\fR \fBno\fR|\fBbinary-targets\fR|\fIimpl-keywords\fR" 4
.IX Item "Rules-Requires-Root: no|binary-targets|impl-keywords"
Dieses Feld wird verwandt, um anzuzeigen, ob die Datei \fBdebian/rules\fR
(fake)root\-Priviliegien ben\(:otigt, um einige ihrer Ziele auszuf\(:uhren, und
falls ja, wann.
.RS 4
.IP "\fBno\fR" 4
.IX Item "no"
Die Bin\(:arziele werden \(:uberhaupt kein (fake)root ben\(:otigen.
.IP "\fBbinary-targets\fR" 4
.IX Item "binary-targets"
Die Bin\(:arziele m\(:ussen immer unter (fake)root ausgef\(:uhrt werden. Dieser Wert
ist die Vorgabe, wenn die Datei fehlt. Die Aufnahme dieses Feldes mit einem
expliziten \fBbinary-targets\fR ist zwar streng genommen nicht notwendig,
markiert aber, dass es darauf untersucht wurde.
.IP "\fIImpl\-Schl\(:usselw\(:orter\fR" 4
.IX Item "Impl-Schl\(:usselw\(:orter"
Dies ist eine durch Leerzeichen getrennte Liste von Schl\(:usselw\(:ortern, die
festlegen, wann (fake)root ben\(:otigt wird.
.Sp
Schl\(:usselw\(:orter bestehen aus \fINamensraum\fR/\fIF\(:alle\fR. Der Teil \fINamensraum\fR
kann kein \(Bq/\(lq oder Leerraum enthalten. Der Teil \fIF\(:alle\fR kann kein Leerraum
enthalten. Desweiteren m\(:ussen beide Teile ausschlie\(sslich aus darstellbaren
ASCII-Zeichen bestehen.
.Sp
Jedes Werkzeug/Paket wird einen Namensraum nach sich selbst definieren und
eine Reihe von F\(:allen bereitstellen, in denen (fake)root ben\(:otigt wird
(siehe \(BqImplementation provided keywords\(lq in \fIrootless\-builds.txt\fR).
.Sp
Wenn das Feld auf eines der \fIImpl\-Schl\(:usselw\(:orter\fR gesetzt wird, wird das
Bauprogramm eine Schnittstelle bereitstellen, die zur Ausf\(:uhrung unter
(fake)root verwandt wird (siehe \(BqGain Root API\(lq in \fIrootless\-builds.txt\fR).
.RE
.RS 4
.RE
.IP "\fBTestsuite:\fR \fINamenliste\fR" 4
.IX Item "Testsuite: Namenliste"
.PD 0
.IP "\fBTestsuite-Triggers:\fR \fIPaketliste\fR" 4
.IX Item "Testsuite-Triggers: Paketliste"
.PD
Diese Felder sind in der Handbuchseite \fBdsc\fR(5) beschrieben, da sie aus
Informationen, die aus \fBdebian/tests/control\fR abgeleitet sind, erstellt
oder w\(:ortlich in die \fBcontrol\fR\-Datei der Quellen kopiert werden.
.IP "\fBVcs\-Arch*:\fR \fI\s-1URL\s0\fR" 4
.IX Item "Vcs-Arch*: URL"
.PD 0
.IP "\fBVcs-Bzr:\fR \fI\s-1URL\s0\fR" 4
.IX Item "Vcs-Bzr: URL"
.IP "\fBVcs-Cvs:\fR \fI\s-1URL\s0\fR" 4
.IX Item "Vcs-Cvs: URL"
.IP "\fBVcs-Darcs:\fR \fI\s-1URL\s0\fR" 4
.IX Item "Vcs-Darcs: URL"
.IP "\fBVcs-Git:\fR \fI\s-1URL\s0\fR" 4
.IX Item "Vcs-Git: URL"
.IP "\fBVcs-Hg:\fR \fI\s-1URL\s0\fR" 4
.IX Item "Vcs-Hg: URL"
.IP "\fBVcs-Mtn:\fR \fI\s-1URL\s0\fR" 4
.IX Item "Vcs-Mtn: URL"
.IP "\fBVcs-Svn:\fR \fI\s-1URL\s0\fR" 4
.IX Item "Vcs-Svn: URL"
.PD
Die \fI\s-1URL\s0\fR des Versionskontrollsystem-Depots, das f\(:ur die Betreuung des
Pakets verwandt wird. Derzeit werden \fBArch\fR, \fBBzr\fR (Bazaar), \fBCvs\fR,
\&\fBDarcs\fR, \fBGit\fR, \fBHg\fR (Mercurial), \fBMtn\fR (Monotone) und \fBSvn\fR
(Subversion) unterst\(:utzt. Normalerweise zeigt dieses Feld auf die neuste
Version des Pakets, wie den Hauptzweig oder den Trunk.
.IP "\fBVcs-Browser:\fR \fI\s-1URL\s0\fR" 4
.IX Item "Vcs-Browser: URL"
Die \fI\s-1URL\s0\fR der Webschnittstelle, um das Versionskontrollsystem-Depot
anzuschauen.
.IP "\fBOrigin:\fR \fIName\fR" 4
.IX Item "Origin: Name"
Der Name der Distribution, aus der dieses Paket urspr\(:unglich stammt. Dieses
Feld wird normalerweise nicht ben\(:otigt.
.IP "\fBSection:\fR \fISektion\fR" 4
.IX Item "Section: Sektion"
Dies ist ein allgemeines Feld, das das Paket in eine Kategorie einordnet,
basierend auf der Software, die es installiert. Einige \(:ubliche Sektionen
sind \fButils\fR, \fBnet\fR, \fBmail\fR, \fBtext\fR, \fBx11\fR usw.
.IP "\fBPriority:\fR \fIPriorit\(:at\fR" 4
.IX Item "Priority: Priorit\(:at"
Setzt die Bedeutung dieses Pakets in Bezug zu dem Gesamtsystem. \(:Ubliche
Priorit\(:aten sind \fBrequired\fR, \fBstandard\fR, \fBoptional\fR, \fBextra\fR usw.
.Sp
Die Felder \fBSection\fR und \fBPriority\fR haben eine definierte Menge an Werten,
abh\(:angig von den jeweiligen Distributionsrichtlinien.
.IP "\fBBuild-Depends:\fR \fIPaketliste\fR" 4
.IX Item "Build-Depends: Paketliste"
Eine Liste der Pakete, die installiert und konfiguriert sein m\(:ussen, um das
Paket aus den Quellen zu bauen. Diese Abh\(:angigkeiten m\(:ussen erf\(:ullt wein,
wenn bin\(:are architekturabh\(:angige und unabh\(:angige und Quellpakete gebaut
werden. Die Aufnahme einer Abh\(:angigkeit in diese Liste hat nicht den
gleichen Effekt wie die Aufnahme in \fBBuild-Depends-Arch\fR und
\&\fBBuild-Depends-Indep\fR, da die Abh\(:angigkeit auch beim Bau des Quellpaketes
erf\(:ullt sein muss.
.IP "\fBBuild-Depends-Arch:\fR \fIPaketliste\fR" 4
.IX Item "Build-Depends-Arch: Paketliste"
Identisch zu \fBBuild-Depends\fR, wird aber nur zum Bau der
architekturabh\(:angigen Pakete ben\(:otigt. In diesem Fall sind die
\&\fBBuild-Depends\fR auch installiert. Dieses Feld wurde seit Dpkg 1.16.4
unterst\(:utzt; um mit \(:alteren Dpkg-Versionen zu bauen, sollte stattdessen
\&\fBBuild-Depends\fR verwandt werden.
.IP "\fBBuild-Depends-Indep:\fR \fIPaketliste\fR" 4
.IX Item "Build-Depends-Indep: Paketliste"
Identisch zu \fBBuild-Depends\fR, wird aber nur zum Bau der
architekturunabh\(:angigen Pakete ben\(:otigt. In diesem Fall sind die
\&\fBBuild-Depends\fR auch installiert.
.IP "\fBBuild-Conflicts:\fR \fIPaketliste\fR" 4
.IX Item "Build-Conflicts: Paketliste"
Eine Liste von Paketen, die beim Bau des Pakets nicht installiert sein
sollten, beispielsweise da sie mit dem verwandten Bausystem in Konflikt
geraten. Die Aufnahme einer Abh\(:angigkeit in diese Liste hat den gleichen
Effekt wie die Aufnahme in \fBBuild-Conflicts-Arch\fR und
\&\fBBuild-Conflicts-Indep\fR mit dem zus\(:atzlichen Effekt, dass es f\(:ur reine
Quellen-Bauten verwandt wird.
.IP "\fBBuild-Conflicts-Arch:\fR \fIPaketliste\fR" 4
.IX Item "Build-Conflicts-Arch: Paketliste"
Identisch zu \fBBuild-Conflicts\fR, aber nur beim Bau der architekturabh\(:angigen
Pakete. Dieses Feld wird seit Dpkg 1.16.4 unterst\(:utzt; um mit \(:alteren
Dpkg-Versionen zu bauen, sollte stattdessen \fBBuild-Conflicts\fR verwandt
werden.
.IP "\fBBuild-Conflicts-Indep:\fR \fIPaketliste\fR" 4
.IX Item "Build-Conflicts-Indep: Paketliste"
Identisch zu \fBBuild-Conflicts\fR, wird aber nur zum Bau der
architekturunabh\(:angigen Pakete ben\(:otigt.
.PP
Die Syntax der Felder \fBBuild-Depends\fR, \fBBuild-Depends-Arch\fR und
\&\fBBuild-Depends-Indep\fR ist eine Liste von Gruppen von alternativen
Paketen. Jede Gruppe ist eine Liste von durch vertikale Striche (oder
\(BqPipe\(lq\-Symbole) \(bq\fB|\fR\(cq getrennten Paketen. Die Gruppen werden durch Kommata
\(bq\fB,\fR\(cq getrennt. Sie k\(:onnen mit einem abschlie\(ssenden Komma enden, das beim
Erstellen der Felder f\(:ur \fBdeb-control\fR(5) entfernt wird (seit Dpkg
1.10.14). Kommata m\(:ussen als \(BqUND\(lq, vertikale Striche als \(BqODER\(lq gelesen
werden, wobei die vertikalen Striche st\(:arker binden. Jedem Paketnamen folgt
optional eine Architekturspezifikation, die nach einem Doppelpunkt \(bq\fB:\fR\(cq
angeh\(:angt wird, optional gefolgt von einer Versionsnummer-Spezifikation in
Klammern \(bq\fB(\fR\(cq und \(bq\fB)\fR\(cq, einer Architekturspezifikation in eckigen
Klammern \(bq\fB[\fR\(cq und \(bq\fB]\fR\(cq und einer Einschr\(:ankungsformel, die aus einer
oder mehr Listen von Profilnamen in spitzen Klammern \(bq\fB<\fR\(cq und
\(bq\fB>\fR\(cq besteht.
.PP
Syntaxtisch werden die Felder \fBBuild-Conflicts\fR, \fBBuild-Conflicts-Arch\fR
und \fBBuild-Conflicts-Indep\fR durch eine Kommata-getrennte Liste von
Paketnamen dargestellt, wobei das Komma als \(BqUND\(lq verstanden wird. Die Liste
kann mit einem abschlie\(ssenden Komma enden, das beim Erstellen der Felder f\(:ur
\&\fBdeb-control\fR(5) entfernt wird (seit Dpkg 1.10.14). Die Angabe alternativer
Pakete mit dem \(BqPipe\(lq\-Symbol wird nicht unterst\(:utzt. Jedem Paketnamen folgt
optional eine Versionsnummerangabe in Klammern, eine
Architekturspezifikation in eckigen Klammern und einer Einschr\(:ankungsformel,
die aus einer oder mehr Listen von Profilnamen in spitzen Klammern besteht.
.PP
Eine Architekturspezifikation kann ein echter Debian-Architekturname sein
(seit Dpkg 1.16.5), \fBany\fR (seit Dpkg 1.16.2) oder \fBnative\fR (seit Dpkg
1.16.5). Falls er fehlt, ist die Vorgabe f\(:ur das Feld \fBBuild-Depends\fR die
aktuelle Host-Architektur, die Vorgabe f\(:ur das Feld \fBBuild-Conflicts\fR ist
\&\fBany\fR. Jeder echte Debian-Architekturname passt genau auf diese Architektur
f\(:ur diesen Paketnamen, \fBany\fR passt auf jede Architektur f\(:ur diesen
Paketnamen, falls das Paket mit \fBMulti-Arch: allowed\fR markiert ist, und
\&\fBnative\fR passt auf die aktuelle Bau-Architektur, falls das Paket nicht mit
\&\fBMulti-Arch: foreign\fR markiert ist.
.PP
Eine Versionsnummer kann mit \(bq\fB>>\fR\(cq beginnen, in diesem Falle
passen alle neueren Versionen, und kann die Debian-Paketrevision (getrennt
durch einen Bindestrich) enthalten oder auch nicht. Akzeptierte
Versionsbeziehungen sind \(bq\fB>>\fR\(cq f\(:ur gr\(:o\(sser als, \(bq\fB<<\fR\(cq f\(:ur
kleiner als, \(bq\fB>=\fR\(cq f\(:ur gr\(:o\(sser als oder identisch zu, \(bq\fB<=\fR\(cq f\(:ur
kleiner als oder identisch zu und \(bq\fB=\fR\(cq f\(:ur identisch zu.
.PP
Eine Architekturspezifikation besteht aus einer oder mehreren durch
Leerraumzeichen getrennten Architekturnamen. Jedem Namen darf ein
Ausrufezeichen vorangestellt werden, das \(BqNICHT\(lq bedeutet.
.PP
Eine Einschr\(:ankungsformel besteht aus einer oder mehrerer durch Leerraum
getrennten Einschr\(:ankungslisten. Jede Einschr\(:ankungsliste wird in spitze
Klammern eingeschlossen. Eintr\(:age in den Einschr\(:ankungslisten sind
Bauprofilnamen, getrennt durch Leerraum. Diesen Listen kann ein
Ausrufezeichen vorangestellt werden, das \(BqNICHT\(lq bedeutet. Eine
Einschr\(:ankungsformel stellt einen Ausdruck in einer disjunkten Normalform
dar.
.PP
Beachten Sie, dass die Abh\(:angigkeiten von Paketen aus der Menge der
\&\fBbuild-essential\fR entfallen kann und die Angabe von Baukonflikten gegen sie
nicht m\(:oglich ist. Eine Liste dieser Pakete befindet sich im Paket
build-essential.
.SH "BIN\(:ARPAKET\-FELDER"
.IX Header "BIN\(:ARPAKET-FELDER"
Beachten Sie, dass die Felder \fBPriority\fR, \fBSection\fR und \fBHomepage\fR sich
auch im Bin\(:arprogrammabsatz befinden k\(:onnen, um die globalen Werte des
Quellpakets zu \(:uberschreiben.
.IP "\fBPackage:\fR \fIBin\(:arpaketname\fR (verpflichtend)" 4
.IX Item "Package: Bin\(:arpaketname (verpflichtend)"
Dieses Feld wird zur Angabe des Bin\(:arpaketnamens verwandt. Es gelten die
gleichen Einschr\(:ankungen wie beim Quellpaketnamen.
.IP "\fBPackage-Type:\fR \fBdeb\fR|\fBudeb\fR|\fItype\fR" 4
.IX Item "Package-Type: deb|udeb|type"
Dieses Feld definiert die Art des Pakets. \fBudeb\fR ist f\(:ur gr\(:o\(ssenbegrenzte
Pakete, wie sie vom Debian-Installer verwandt werden. \fBdeb\fR ist der
Standardwert, er wird angenommen, falls das Feld fehlt. Weitere Typen
k\(:onnten in der Zukunft hinzugef\(:ugt werden.
.IP "\fBArchitecture:\fR \fIarch\fR|\fBall\fR|\fBany\fR (verpflichtend)" 4
.IX Item "Architecture: arch|all|any (verpflichtend)"
Die Architektur gibt an, auf welcher Art von Hardware dieses Paket
l\(:auft. Bei Paketen, die auf allen Architekturen laufen, verwenden Sie den
Wert \fBany\fR. F\(:ur Pakete, die architekturunabh\(:angig sind, wie Shell\- und
Perl-Skripte oder Dokumentation, verwenden Sie den Wert \fBall\fR. Um das Paket
f\(:ur einen bestimmten Satz von Architekturen zu begrenzen, geben Sie die
durch Leerzeichen getrennten Namen der Architekturen an. Es ist auch
m\(:oglich, Platzhalter f\(:ur Architekturen in dieser Liste anzugeben (lesen Sie
\&\fBdpkg-architecture\fR(1) f\(:ur weitere Informationen dazu).
.IP "\fBBuild-Profiles:\fR \fIEinschr\(:ankungsformel\fR" 4
.IX Item "Build-Profiles: Einschr\(:ankungsformel"
Dieses Feld legt die Bedingungen fest, zu denen dieses Bin\(:arpaket (nicht)
baut. Um diese Bedingung auszudr\(:ucken, wird die Einschr\(:ankungsformelsyntax
aus dem Feld \fBBuild-Depends\fR verwandt.
.Sp
Falls der Absatz eines bin\(:aren Pakets dieses Feld nicht enth\(:alt, dann
bedeutet dies implizit, dass es mit allen Bauprofilen (darunter auch keinem)
baut.
.Sp
Mit anderen Worten: Falls der Absatz eines Bin\(:arpaketes mit einem nicht
leeren Feld \fBBuild-Profiles\fR kommentiert wird, dann wird dieses Bin\(:arpaket
erstellt, falls und nur falls der Ausdruck in konjunktiver Normalform sich
auf \(Bqwahr\(lq berechnet.
.IP "\fBProtected:\fR \fBByes\fR|\fBno\fR" 4
.IX Item "Protected: Byes|no"
.PD 0
.IP "\fBEssential:\fR \fByes\fR|\fBno\fR" 4
.IX Item "Essential: yes|no"
.IP "\fBBuild-Essential:\fR \fByes\fR|\fBno\fR" 4
.IX Item "Build-Essential: yes|no"
.IP "\fBMulti-Arch:\fR \fBsame\fR|\fBforeign\fR|\fBallowed\fR|\fBno\fR" 4
.IX Item "Multi-Arch: same|foreign|allowed|no"
.IP "\fBTag:\fR  \fIListe-von-Markierungen\fR" 4
.IX Item "Tag: Liste-von-Markierungen"
.IP "\fBDescription:\fR \fIKurzbeschreibung\fR (empfohlen)" 4
.IX Item "Description: Kurzbeschreibung (empfohlen)"
.PD
Diese Felder sind in der Handbuchseite \fBdeb-control\fR(5) beschrieben, da sie
w\(:ortlich in die \fBcontrol\fR\-Datei des Bin\(:arpakets kopiert werden.
.IP "\fBDepends:\fR  \fIPaketliste\fR" 4
.IX Item "Depends: Paketliste"
.PD 0
.IP "\fBPre-Depends:\fR  \fIPaketliste\fR" 4
.IX Item "Pre-Depends: Paketliste"
.IP "\fBRecommends:\fR  \fIPaketliste\fR" 4
.IX Item "Recommends: Paketliste"
.IP "\fBSuggests:\fR  \fIPaketliste\fR" 4
.IX Item "Suggests: Paketliste"
.IP "\fBBreaks:\fR  \fIPaketliste\fR" 4
.IX Item "Breaks: Paketliste"
.IP "\fBEnhances:\fR  \fIPaketliste\fR" 4
.IX Item "Enhances: Paketliste"
.IP "\fBReplaces:\fR \fIPaketliste\fR" 4
.IX Item "Replaces: Paketliste"
.IP "\fBConflicts:\fR  \fIPaketliste\fR" 4
.IX Item "Conflicts: Paketliste"
.IP "\fBProvides:\fR  \fIPaketliste\fR" 4
.IX Item "Provides: Paketliste"
.IP "\fBBuilt-Using:\fR  \fIPaketliste\fR" 4
.IX Item "Built-Using: Paketliste"
.PD
Diese Felder geben Beziehungen zwischen Paketen an. Sie werden in der
Handbuchseite \fBdeb-control\fR(5) erl\(:autert. In \fIdebian/control\fR k\(:onnen diese
Felder auch mit einem abschlie\(ssenden Komma enden (seit Dpkg 1.10.14),
Architekturspezifikations\- und \-einschr\(:ankungsformeln enthalten, die alle
beim Erstellen von \fBdeb-control\fR(5) reduziert werden.
.IP "\fBSubarchitecture:\fR  \fIWert\fR" 4
.IX Item "Subarchitecture: Wert"
.PD 0
.IP "\fBKernel-Version:\fR  \fIWert\fR" 4
.IX Item "Kernel-Version: Wert"
.IP "\fBInstaller-Menu-Item:\fR  \fIWert\fR" 4
.IX Item "Installer-Menu-Item: Wert"
.PD
Diese Felder werden im Debian-Installer in \fBudeb\fRs verwandt und werden
normalerweise nicht ben\(:otigt. Lesen Sie
/usr/share/doc/debian\-installer/devel/modules.txt aus dem Paket
\&\fBdebian-installer\fR f\(:ur weitere Informationen \(:uber sie.
.SH "BENUTZERDEFINIERTE FELDER"
.IX Header "BENUTZERDEFINIERTE FELDER"
Es ist erlaubt, zus\(:atzliche benutzerdefinierte Felder zu der Steuerdatei
hinzuzuf\(:ugen. Die Werkzeuge werden diese Felder ignorieren. Falls Sie
m\(:ochten, dass diese Felder in die Ausgabedateien, wie das Bin\(:arpaket,
r\(:uberkopiert werden sollen, m\(:ussen Sie ein angepasstes Namensschema
verwenden: Die Felder sollten mit einem \fBX\fR, gefolgt von Null oder mehreren
Buchstaben aus \fB\s-1SBC\s0\fR und einem Bindestrich, beginnen.
.IP "\fBS\fR" 4
.IX Item "S"
Das Feld wird in der Steuerdatei des Quellpakets auftauchen, siehe
\&\fBdsc\fR(5).
.IP "\fBB\fR" 4
.IX Item "B"
Das Feld wird in der Steuerdatei des Bin\(:arpakets auftauchen, siehe
\&\fBdeb-control\fR(5).
.IP "\fBC\fR" 4
.IX Item "C"
Das Feld wird in der Steuerdatei des Uploads (.changes) auftauchen, siehe
\&\fBdeb-changes\fR(5).
.PP
Beachten Sie, dass die Pr\(:afixe \fBX\fR[\fB\s-1SBC\s0\fR]\fB\-\fR abgeschnitten werden, wenn
die Felder in die Ausgabedateien r\(:uberkopiert werden. Ein Feld
\&\fBXC-Approved-By\fR wird als \fBApproved-By\fR in der .changes\-Datei und nicht in
der Steuerdatei des Bin\(:ar\- und Quellpakets auftauchen.
.PP
Beachten Sie, dass diese benutzerdefinierten Felder den globalen Namensraum
nutzen werden und somit in der Zukunft mit offiziell erkannten Feldern
kollidieren k\(:onnten. Um solche m\(:oglichen Situationen zu vermeiden, k\(:onnen
Sie den Feldern \fBPrivate\-\fR, wie in \fBXB-Private-Neues-Feld\fR, voranstellen.
.SH "BEISPIEL"
.IX Header "BEISPIEL"
.Vb 10
\& # Kommentar
\& Source: dpkg
\& Section: admin
\& Priority: required
\& Maintainer: Dpkg Developers <debian\-dpkg@lists.debian.org>
\& # dieses Feld wird in das Bin\(:ar\- und Quellpaket kopiert
\& XBS\-Upstream\-Release\-Status: stable
\& Homepage: https://wiki.debian.org/Teams/Dpkg
\& Vcs\-Browser: https://git.dpkg.org/cgit/dpkg/dpkg.git
\& Vcs\-Git: https://git.dpkg.org/git/dpkg/dpkg.git
\& Standards\-Version: 3.7.3
\& Build\-Depends: pkg\-config, debhelper (>= 4.1.81),
\&  libselinux1\-dev (>= 1.28\-4) [!linux\-any]
\&
\& Package: dpkg\-dev
\& Section: utils
\& Priority: optional
\& Architecture: all
\& # dies ist ein spezielles Feld im Bin\(:arpaket
\& XB\-Mentoring\-Contact: Raphael Hertzog <hertzog@debian.org>
\& Depends: dpkg (>= 1.14.6), perl5, perl\-modules, cpio (>= 2.4.2\-2),
\&  bzip2, lzma, patch (>= 2.2\-1), make, binutils, libtimedate\-perl
\& Recommends: gcc | c\-compiler, build\-essential
\& Suggests: gnupg, debian\-keyring
\& Conflicts: dpkg\-cross (<< 2.0.0), devscripts (<< 2.10.26)
\& Replaces: manpages\-pl (<= 20051117\-1)
\& Description: Debian package development tools
\&  This package provides the development tools (including dpkg\-source)
\&  required to unpack, build and upload Debian source packages.
\&  .
\&  Most Debian source packages will require additional tools to build;
\&  for example, most packages need make and the C compiler gcc.
.Ve
.SH "SIEHE AUCH"
.IX Header "SIEHE AUCH"
\&\fBdeb-control\fR(5), \fBdeb-version\fR(7), \fBdpkg-source\fR(1)
.SH "\(:UBERSETZUNG"
.IX Header "\(:UBERSETZUNG"
Die deutsche \(:Ubersetzung wurde 2004, 2006\-2020 von Helge Kreutzmann
<debian@helgefjell.de>, 2007 von Florian Rehnisch <eixman@gmx.de> und
2008 von Sven Joachim <svenjoac@gmx.de>
angefertigt. Diese \(:Ubersetzung ist Freie Dokumentation; lesen Sie die
\&\s-1GNU\s0 General Public License Version 2 oder neuer f\(:ur die Kopierbedingungen.
Es gibt \s-1KEINE HAFTUNG.\s0
