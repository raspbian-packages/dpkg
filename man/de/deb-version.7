.\" Automatically generated by Pod::Man 4.11 (Pod::Simple 3.35)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "deb-version 7"
.TH deb-version 7 "2020-08-02" "1.20.5" "dpkg suite"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "BEZEICHNUNG"
.IX Header "BEZEICHNUNG"
deb-version \- Versionsnummer-Format von Debian-Paketen
.SH "\(:UBERSICHT"
.IX Header "\(:UBERSICHT"
[ \fIEpoche\fR\fB:\fR]\fIUpstream-Version\fR[\fB\-\fR\fIDebian-Revision\fR]
.SH "BESCHREIBUNG"
.IX Header "BESCHREIBUNG"
Die f\(:ur Debian Bin\(:ar\- und Quellpakete verwendete Versionsnummer besteht aus
drei Komponenten. Diese sind:
.IP "\fIEpoche\fR" 4
.IX Item "Epoche"
Dies ist eine einzelne (typischerweise kleine) vorzeichenlose ganze
Zahl. Sie darf entfallen, wobei dann Null angenommen wird. Falls sie
entf\(:allt, darf die \fIUpstream-Version\fR keine Doppelpunkte enthalten.
.Sp
Sie existiert, um Fehler in den Versionsnummern \(:alterer Versionen des Pakets
zu erlauben und auch, um das bisherige Nummerierungsschema eines Paketes
aufzugeben.
.IP "\fIUpstream-Version\fR" 4
.IX Item "Upstream-Version"
Dies ist der Hauptteil der Versionsnummer. Normalerweise ist dies die
Versionsnummer des Originalpakets (\(BqUpstream\(lq), aus dem die \fI.deb\fR\-Datei
erstellt wurde, falls dies zutrifft. Normalerweise wird diese im gleichen
Format vorliegen, wie sie von den Originalautoren angegeben wurde;
allerdings kann es notwendig sein, sie umzuformatieren, damit sie in das
Format des Paketverwaltungssystems und des Vergleichsschemas passt.
.Sp
Das Vergleichsverhalten des Paketverwaltungssystems in Hinblick auf die
\&\fIUpstream-Version\fR wird nachfolgend beschrieben. Der
\&\fIUpstream-Version\fR\-Anteil der Versionsnummer muss angegeben werden.
.Sp
\&\fIUpstream-Version\fR darf nur alphanumerische Zeichen (\(BqA\-Za\-z0\-9\(lq) und \fB.\fR
\&\fB+\fR \fB\-\fR \fB:\fR \fB~\fR (Satzpunkt, Plus, Bindestrich, Doppelpunkt, Tilde)
enthalten und sollte mit einer Zahl beginnen. Falls es keine
\&\fIDebian-Revision\fR gibt, sind Bindestriche nicht erlaubt; falls es keine
\&\fIEpoche\fR gibt, sind Doppelpunkte nicht erlaubt.
.IP "\fIDebian-Revision\fR" 4
.IX Item "Debian-Revision"
Dieser Teil der Versionsnummer spezifiziert die Version des Debian-Paketes,
basierend auf der Version der Originalautoren. Er kann nur alphanumerische
Zeichen und \fB+\fR \fB.\fR \fB~\fR (Plus, Satzpunkt, Tilde) enthalten und wird
genauso wie die \fIUpstream-Version\fR verglichen.
.Sp
Dieser Teil ist optional; falls er nicht vorhanden ist, darf
\&\fIUpstream-Version\fR keinen Bindestrich enthalten. Dieses Format ist f\(:ur den
Fall, dass ein St\(:uck Software speziell daf\(:ur geschrieben wurde, ein
Debian-Paket zu werden und es daher nur eine \(BqDebianisierung\(lq gibt und somit
keine Revisionsanzeige notwendig ist.
.Sp
Es ist \(:ublich, die \fIDebian-Revision\fR jedesmal bei \(bq1\(cq neu zu starten, wenn
die \fIUpstream-Version\fR erh\(:oht wird.
.Sp
Dpkg wird die Versionsnummer beim letzten Bindestrich in der Zeichenkette
auftrennen (falls dieser existiert), um die \fIUpstream-Version\fR und die
\&\fIDebian-Revision\fR zu bestimmen. Im Vergleich befindet sich eine fehlende
\&\fIDebian-Revision\fR vor einer vorhandenen (beachten Sie aber, dass es sich
bei der \fIDebian-Revision\fR um den Teil der Versionsnummer mit der geringsten
Signifikanz handelt).
.SS "Sortieralgorithmus"
.IX Subsection "Sortieralgorithmus"
Die \fIUpstream-Version\fR\- und \fIDebian-Revision\fR\-Teile werden von der
Paketverwaltung nach dem gleichen Algorithmus verglichen:
.PP
Die Zeichenketten werden von links nach rechts verglichen.
.PP
Zuerst wird der Anfangsteil jeder Zeichenkette bestimmt, der komplett aus
nicht-Ziffern-Zeichen besteht. Diese zwei Teile (von denen einer leer sein
kann) werden lexikalisch verglichen. Wird ein Unterschied gefunden, wird
dieser zur\(:uckgeliefert. Der lexikalische Vergleich ist ein ver\(:anderter
Vergleich von ASCII-Werten, bei denen Buchstaben vor allen nicht-Buchstaben
sortiert werden und die Tilde vor allem sortiert wird, sogar vor dem Ende
eines Teiles. So sind zum Beispiel die folgenden Teile in sortierter
Reihenfolge: \(bq~~\(cq, \(bq~~a\(cq, \(bq~\(cq, der leere Teil, \(bqa\(cq.
.PP
Dann wird der Anfangsteil des Restes jeder Zeichenkette bestimmt, der
komplett aus Ziffern besteht. Der numerische Wert dieser zwei Teile wird
verglichen, und jeder gefundene Unterschied wird als Ergebnis des Vergleichs
zur\(:uckgeliefert. F\(:ur diesen Zweck z\(:ahlt die leere Zeichenkette (die nur am
Ende einer oder beider der zu vergleichenden Versionszeichenketten
erscheinen kann) als Null.
.PP
Diese zwei Schritte (Vergleichen und Entfernen von
nicht-Ziffern-Zeichenketten und Ziffern-Zeichenketten am Anfang) werden
wiederholt, bis ein Unterschied gefunden wird oder beide Zeichenketten
ersch\(:opft wurden.
.PP
Beachten Sie, dass Epochen uns erlauben, Fehler in der Versionsnummerierung
zur\(:uckzulassen, und mit Situationen umzugehen, in denen sich das Schema der
Versionsnummerierung \(:andert. Sie sind \fBnicht\fR dazu gedacht, mit
Versionsnummern umzugehen, die Zeichenketten aus Buchstaben enthalten, die
das Paketverwaltungssystem nicht interpretieren kann (wie \(bqALPHA\(cq oder
\(bqpre\-\(cq)) oder mit unklugen Reihenfolgen.
.SH "BEMERKUNGEN"
.IX Header "BEMERKUNGEN"
Das Tilde-Zeichen und seine speziellen Sortiereigenschaften wurden in Dpkg
1.10 eingef\(:uhrt und einige Teile der Bauskripte von Dpkg haben erst sp\(:ater
in der 1.10.x\-Serie Unterst\(:utzung daf\(:ur erhalten.
.SH "SIEHE AUCH"
.IX Header "SIEHE AUCH"
\&\fBdeb-control\fR(5), \fBdeb\fR(5), \fBdpkg\fR(1)
.SH "\(:UBERSETZUNG"
.IX Header "\(:UBERSETZUNG"
Die deutsche \(:Ubersetzung wurde 2004, 2006\-2020 von Helge Kreutzmann
<debian@helgefjell.de>, 2007 von Florian Rehnisch <eixman@gmx.de> und
2008 von Sven Joachim <svenjoac@gmx.de>
angefertigt. Diese \(:Ubersetzung ist Freie Dokumentation; lesen Sie die
\&\s-1GNU\s0 General Public License Version 2 oder neuer f\(:ur die Kopierbedingungen.
Es gibt \s-1KEINE HAFTUNG.\s0
