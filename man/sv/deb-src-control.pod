
        *****************************************************
        *           GENERATED FILE, DO NOT EDIT             *
        * THIS IS NO SOURCE FILE, BUT RESULT OF COMPILATION *
        *****************************************************

This file was generated by po4a(7). Do not store it (in VCS, for example),
but store the PO file used as source file by po4a-translate.

In fact, consider this as a binary, and the PO file as a regular .c file:
If the PO get lost, keeping this translation up-to-date will be harder.

=encoding UTF-8

=head1 NAMN

deb-src-control - Debian source package template control file format

=head1 SYNOPS

B<debian/control>

=head1 BESKRIVNING

Each Debian source package contains the «B<debian/control>» template source control file, and its L<deb822(5)> format is a superset of the B<control> file shipped in Debian binary packages, see L<deb-control(5)>.

This file contains at least 2 stanzas, separated by a blank line.  The first stanza is called the source package stanza and lists all information about the source package in general, while each following stanzas are called the binary package stanzas and describe exactly one binary package per stanza. Each stanza consists of at least one field.  A field starts with a field name, such as B<Package> or B<Section> (case insensitive), followed by a colon, the body of the field (case sensitive unless stated otherwise) and a newline.  Multi-line fields are also allowed, but each supplementary line, without a field name, should start with at least one space. The content of the multi-line fields is generally joined to a single line by the tools (except in the case of the B<Description> field, see below). To insert empty lines into a multi-line field, insert a dot after the space.  Lines starting with a ‘B<#>’ are treated as comments.

=head1 KÄLLKODSFÄLT

=over 

=item B<Source:> I<källkodspaketnamn> (krävs)

Värdet på det här fältet är namnet på källkodspaketet, och måste motsvara namnet på källkodspaketet i filen debian/changelog. Paketnamnet måste bestå endast av små bokstäver (a-z), siffror (0-9), plus- (+) och minustecken (-) och punkt (.). Paketnamn måste vara minst två tecken långa och måste börja med ett liten bokstav eller siffra (a-z0-9).

=item B<Maintainer:> I<fullt-namn-epost> (rekommenderas)

Ska vara på formatet ”Joe Bloggs E<lt>jbloggs@foo.comE<gt>” och refererar till den person som för närvarande underhåller paketet, till skillnad från programmets författare eller den ursprunglige paketeraren.

=item B<Uploaders:> I<fullt-namn-epost>

Räknar upp namn och e-postadresser till med-underhållare av paketet, i samma format som fältet B<Maintainer>. Flera med-underhållare bör avdelas med kommatecken.

=item B<Standards-Version:> I<versionssträng>

Dokumenterar den senaste versionen av distributionens policystandard som paketet uppfyller.

=item B<Description:> I<kort-beskrivning>)

=item S< >I<lång-beskrivning>

Formatet för källkodspaketbeskrivningen är en kortfattad sammanfattning på den första raden (efter fältet B<Description>). Följande rader bör användas för en längre, mer detaljerad beskrivning. Varje rad i den lägre beskrivningen måste inledas med ett blanksteg, och blanka rader i den långa beskrivningen måste innehålla en ensam ”B<.>” efter det inledande blanksteget.

=item B<Homepage:> I<url>

URL till uppströmsprojektets hemsida.

=item B<Bugs:> I<url>

I<Url>:en till felrapporteringssystemet för detta paket. Det nuvarande formatet är I<systemtyp>://I<address>, till exempel B<debbugs://bugs.debian.org>. Det här fältet är normalt sett inte nödvändigt.

=item B<Rules-Requires-Root:> B<no>|B<binary-targets>|I<impl-nyckelord>

Det här fältet används för att ange om filen B<debian/rules> kräver (fake)root-privilegier för att köra några av sina mål, och i så fall när.

=over 

=item B<no> (nej)

The binary targets will not require (fake)root at all.  This is the default in B<dpkg-build-api> level >= 1.

=item B<binary-targets>

The binary targets must always be run under (fake)root.  This value is the default in B<dpkg-build-api> level 0, when the field is omitted; adding the field with an explicit B<binary-targets>, while not strictly needed, marks it as having been analyzed for this requirement.

=item I<impl-nyckelord>

Det här är en blankstegsavdelad lista med nyckelord som kan ange när (fake)root krävs.

Nyckelord består av I<namnrymd>/I<fall>. Delen I<namnrymd> kan inte innehålla "/" eller blanksteg. Delen I<fall> kan inte innehålla blanksteg. Dessutom måste bägge delarna i sin helhet bestå av skrivbara ASCII-tecken.

Varje verktyg/paket definierar en namnrymd med samma namn som sig själv och anger ett antal fall där (fake)root krävs. (Se "Implementation provided keywords" i I<rootless-builds.txt>).

När fältet är satt till ett av I<impl-nyckelord> kommer byggaren att exponera ett gränssnitt som används för att köra ett kommando under (fake)root. (Se "Gain Root API" i I<rootless-builds.txt>.)

=back

=item B<Testsuite:> I<namnlist>

=item B<Testsuite-Triggers:> I<paketlista>

These fields are described in the L<dsc(5)> manual page, as they are generated from information inferred from B<debian/tests/control> or copied literally to the source control file.

=item B<Vcs-Arch:> I<url>

=item B<Vcs-Bzr:> I<url>

=item B<Vcs-Cvs:> I<url>

=item B<Vcs-Darcs:> I<url>

=item B<Vcs-Git:> I<url>

=item B<Vcs-Hg:> I<url>

=item B<Vcs-Mtn:> I<url>

=item B<Vcs-Svn:> I<url>

I<Url>:en till versionshanteringsarkivet som används för att underhålla det här paketet. För närvarande stöds B<Arch>, B<Bzr> (Bazaar), B<Cvs>, B<Darcs>, B<Git>, B<Hg> (Mercurial), B<Mtn> (Monotone) och B<Svn> (Subversion). Fältet pekar normalt till den senaste versionen av paketet, såsom huvudgrenen (main eller trunk).

=item B<Vcs-Browser:> I<url>

I<Url>:en till ett webbgränssnitt för att bläddra i versionshanteringsarkivet.

=item B<Origin:> I<namn>

Namnet på den distribution paketet härstammar från. Det här fältet är normalt sett inte nödvändigt.

=item B<Section:> I<sektion>

Detta är ett generellt fält som ger paketet en kategori baserat på programvara som det installerar. Några vanliga sektioner är B<utils>, B<net>, B<mail>, B<text>, B<x11>, osv.

=item B<Priority:> I<prioritet>

Ställer in hur viktigt paketet är jämfört med systemet som helhet. Vanliga prioriteter är B<required> (nödvändig), B<standard> (normal), B<optional> (valfritt), B<extra> (extra), osv.

Gälten B<Section> och B<Priority> har vanligtvis en definierad uppsättning accepterade värden baserade på den specifika distributionens policy.

=item B<Build-Depends:> I<paketlista>

En lista över paket som måste installeras och konfigureras för att kunna bygga källkodspaketet. Dessa beroenden måste tillfredsställas när binärarkitekturberoende eller -oberoende paket och källkodspaket byggs. Ett beroende som beskrivs i den här listan har inte exakt samma effekt som att inkludera det i både B<Build-Depends-Arch> och B<Build-Depends-Indep>, eftersom beroendet också måste tilfredsställas när källkodspaketet byggs.

=item B<Build-Depends-Arch:> I<paketlista>

Motsvarar B<Build-Depends>, men de behövs endast för att bygga de arkitekturoberoende paketen. B<Build-Depends> installeras också i detta fall. Det här fältet stöds sedan dpkg 1.16.4; för att bygga med äldre dpkg-versioner bör B<Build-Depends> användas istället.

=item B<Build-Depends-Indep:> I<paketlista>

Motsvarar B<Build-Depends>, men de behövs endast för att bygga de arkitekturoberoende paketen. B<Build-Depends> installeras också i detta fall.

=item B<Build-Conflicts:> I<paketlista>

En lista över paket som inte bör vara installerade när paketet byggs, till exempel på grund av att de stör byggsystemet som används. Ett beroende som beskrivs i den här listan har samma effekt som att inkludera det i både B<Build-Conflicts-Arch> och B<Build-Conflicts-Indep>, med den ytterligare effekten att den används för byggen av endast källkod.

=item B<Build-Conflicts-Arch:> I<paketlista>

Motsvarar B<Build-Conflicts>, men endast när arkitekturoberoende paket byggs. Fältet stöds sedan dpkg 1.16.4; för att bygga med äldre versioner av dpkg bör B<Build-Conflicts> användas istället.

=item B<Build-Conflicts-Indep:> I<paketlista>

Motsvarar B<Build-Conflicts>, men endast när de arkitekturoberoende paketen byggs.

=back

The syntax of the B<Build-Depends>, B<Build-Depends-Arch> and B<Build-Depends-Indep> fields is a list of groups of alternative packages. Each group is a list of packages separated by vertical bar (or “pipe”) symbols, ‘B<|>’.  The groups are separated by commas ‘B<,>’, and can end with a trailing comma that will be eliminated when generating the fields for L<deb-control(5)> (since dpkg 1.10.14).  Commas are to be read as “AND”, and pipes as “OR”, with pipes binding more tightly.  Each package name is optionally followed by an architecture qualifier appended after a colon ‘B<:>’, optionally followed by a version number specification in parentheses ‘B<(>’ and ‘B<)>’, an architecture specification in square brackets ‘B<[>’ and ‘B<]>’, and a restriction formula consisting of one or more lists of profile names in angle brackets ‘B<E<lt>>’ and ‘B<E<gt>>’.

The syntax of the B<Build-Conflicts>, B<Build-Conflicts-Arch> and B<Build-Conflicts-Indep> fields is a list of comma-separated package names, where the comma is read as an “AND”, and where the list can end with a trailing comma that will be eliminated when generating the fields for L<deb-control(5)> (since dpkg 1.10.14).  Specifying alternative packages using a “pipe” is not supported.  Each package name is optionally followed by a version number specification in parentheses, an architecture specification in square brackets, and a restriction formula consisting of one or more lists of profile names in angle brackets.

Ett arkitekturkvalificeringsnamn kan vara ett existerande Debianarkitekturnamn (sedan dpkg 1.16.5), B<any> (sedan dpkg 1.16.2) eller B<native> (sedan dpkg 1.16.5). Om det utesluts är förvalet för fältet B<Build-Depends> den aktuella värdarkitekturen, förvalet för B<Build-Conflicts> är B<any>. Ett existerande Debianarkitekturnamn motsvarar exakt den arkitekturen för det paketnamnet, B<any> motsvarar valfri arkitektur för paketnamnet om paketet har markerats som B<Multi-Arch: allowed> och B<native> motsvarar nuvarande byggarkitektur om paketet inte har markerats som B<Multi-Arch: foreign>.

Ett versionsnummer kan börja med ”B<E<gt>E<gt>>”, vilket betyder att vilken som helst senare version matchar, där det är valfritt att ange Debianuppdateringen (avdelad med bindestreck).  Tillåtna versionrelationer är ”B<E<gt>E<gt>>” för större än, ”B<E<lt>E<lt>>” för mindre än, ”B<E<gt>=>” för större än eller lika med, ”B<E<lt>=>” för mindre än eller lika med, och ”B<=>” för lika med.

En arkitekturangivelse består av ett eller flera arkitekturnamn, avdelade med blanktecken. Varje namn kan föregås av ett utropstecken, vilket betyder ”ICKE”.

En begränsningsformel består av en eller flera begränsningslistor, avdelade med blanksteg. Varje begränsningslista skrivs inom vinkelparenteser. Poster i begränsningslistan är namn på byggprofiler, avdelade av blanksteg och kan föregås av ett utropstecken, vilket betyder ”ICKE”. En begränsningsformel representerar ett uttryck i disjunktiv normalform.

Observera att beroenden på paket i B<build-essential>-uppsättningen kan utelämnas och att det är omöjligt att deklarera byggkonflikter mot dem. En lista över dessa paket finns i paketet build-essential.

=head1 BINÄRFÄLT

Observera att fälten B<Priority>, B<Section> och B<Homepage> även kan användas i de stycken som beskriver binärpaket för att överstyra de globala värdena för källkodspaketet.

=over 

=item B<Package:> I<binärpaketnamn> (krävs)

Detta fält används för att namnge det binära paketet. Samma begränsningar gäller som för källkodspaketets namn.

=item B<Package-Type:> B<deb>|B<udeb>|I<typ>

Detta fält anger paketets typ. B<udeb> används för storleksbegränsade paket som används av debians installationsprogram. B<deb> är standardvärdet, och antas om fältet saknas. Fler typer kan komma att läggas till i framtiden.

=item B<Architecture:> I<ark>|B<all>|B<any> (krävs)

The architecture specifies on which type of hardware this package runs. For packages that run on all architectures, use the B<any> value. For packages that are architecture independent, such as shell and Perl scripts or documentation, use the B<all> value. To restrict the packages to a certain set of architectures, specify the architecture names, separated by a space. It's also possible to put architecture wildcards in that list (see L<dpkg-architecture(1)> for more information about them).

=item B<Build-Profiles:> I<begränsningsformel>

Det här fältet anger villkor för när binärpaketet ska eller inte ska byggas. För att uttrycka villkoret används samma syntax för begränsningsformeln som för fältet B<Build-Depends> (inklusive vinkelparenteserna).

Om ett stycke för ett binärpaket inte innehåller det här fältet betyder det implicit att det bygger i alla byggprofiler (inklusive ingen alls).

Med andra ord, om ett stycke för ett binärpaket är försett med ett icke-tomt B<Build-Profiles>-fält kommer det binärpaketet byggas om, och endast om, villkoret, uttryckt i konjunktiv normalform, utvärderas till sant.

=item B<Protected:> B<yes>|B<no>

=item B<Essential:> B<yes>|B<no>

=item B<Build-Essential:> B<yes>|B<no>

=item B<Multi-Arch:> B<same>|B<foreign>|B<allowed>|B<no>

=item B<Tag:> I<lista-med-märken>

=item B<Description:> I<kort-beskrivning> (rekommenderas)

These fields are described in the L<deb-control(5)> manual page, as they are copied literally to the control file of the binary package.

=item B<Depends:> I<paketlista>

=item B<Pre-Depends:> I<paketlista>

=item B<Recommends:> I<paketlista>

=item B<Suggests:> I<paketlista>

=item B<Breaks:> I<paketlista>

=item B<Enhances:> I<paketlista>

=item B<Replaces:> I<paketlista>

=item B<Conflicts:> I<paketlista>

=item B<Provides:> I<paketlista>

=item B<Built-Using:> I<paketlista>

=item B<Static-Built-Using:> I<paketlista>

These fields declare relationships between packages. They are discussed in the L<deb-control(5)> manual page.  When these fields are found in I<debian/control> they can also end with a trailing comma (since dpkg 1.10.14), have architecture specifications and restriction formulas which will all get reduced when generating the fields for L<deb-control(5)>.

=item B<Subarchitecture:> I<värde>

=item B<Kernel-Version:> I<värde>

=item B<Installer-Menu-Item:> I<värde>

Dessa fält används av debian-installer i B<udeb>-formatet och behövs normalt inte. För mer information om dem, se L<https://salsa.debian.org/installer-team/debian-installer/-/raw/master/doc/devel/modules.txt>.

=back

=head1 ANVÄNDARDEFINIERADE FÄLT

Det är tillåtet att lägga till ytterligare användardefinierade fält till styrfilen. Verktygen kommer ignorera dessa fält. Om du vill att fältet ska kopieras över till utdatafilerna, så som binärpaketen, måste du använda ett skräddarsytt namngivningsformat: fälten ska börja på B<X>, följt av noll eller flera av tecknen S<SBC> och ett bindestreck.

=over 

=item B<S>

The field will appear in the source package control file, see L<dsc(5)>.

=item B<B>

The field will appear in the control file in the binary package, see L<deb-control(5)>.

=item B<C>

The field will appear in the upload control (.changes) file, see L<deb-changes(5)>.

=back

Observera att prefix på formen B<X>[B<SBC>]B<-> tas bort när fälten kopieras över till utdatafilerna. Fältet B<XC-Approved-By> kommer tas med som B<Approved-By> i ”changes”-filen och inte tas med i styrfilerna för binär- och källkodspaketen.

Tänk på att dess användardefinierade fält använder den globala namnrymden, vilket en gång i framtiden kan komma att kollidera med officiellt erkända fält. För att undvika sådana potentiella situationer kan du använda prefixet B<Private-> för dessa fält, som B<XB-Private-New-Field>.

=head1 EXEMPEL

 # Kommentar
 Source: dpkg
 Section: admin
 Priority: required
 Maintainer: Dpkg Developers <debian-dpkg@lists.debian.org>
 # det här fältet kopieras till binär- och källkodspaketen
 XBS-Upstream-Release-Status: stable
 Homepage: https://wiki.debian.org/Teams/Dpkg
 Vcs-Browser: https://git.dpkg.org/cgit/dpkg/dpkg.git
 Vcs-Git: https://git.dpkg.org/git/dpkg/dpkg.git
 Standards-Version: 3.7.3
 Build-Depends: pkgconf, debhelper (>= 4.1.81),
  libselinux1-dev (>= 1.28-4) [!linux-any]

 Package: dpkg-dev
 Section: utils
 Priority: optional
 Architecture: all
 # det här är ett skräddarsytt fält i binärpaketet
 XB-Mentoring-Contact: Raphael Hertzog <hertzog@debian.org>
 Depends: dpkg (>= 1.14.6), perl5, perl-modules, cpio (>= 2.4.2-2),
  bzip2, lzma, patch (>= 2.2-1), make, binutils, libtimedate-perl
 Recommends: gcc | c-compiler, build-essential
 Suggests: gnupg, debian-keyring
 Conflicts: dpkg-cross (<< 2.0.0), devscripts (<< 2.10.26)
 Replaces: manpages-pl (<= 20051117-1)
 Description: Debian package development tools
  This package provides the development tools (including dpkg-source)
  required to unpack, build and upload Debian source packages.
  .
  Most Debian source packages will require additional tools to build;
  for example, most packages need make and the C compiler gcc.

=head1 SE ÄVEN

I<%PKGDOCDIR%/spec/rootless-builds.txt>, L<deb822(5)>, L<deb-control(5)>, L<deb-version(7)>, L<dpkg-source(1)>


=head1 ÖVERSÄTTNING

Peter Krefting och Daniel Nylander.
